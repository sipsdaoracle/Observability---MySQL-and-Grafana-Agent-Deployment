  162  git push
  163  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  164  kubectl port-forward svc/argocd-server -n argocd 8080:443
  165  kubectl get pods -A
  166  ./setup-cluster.sh 
  167  kubectl get pods -A
  168  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  169  ./setup-cluster.sh 
  170  ./setup-cluster.sh 
  171  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  172  minikube status
  173  minikube start
  174  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  175  ./setup-cluster.sh 
  176  kubectl get pods -A
  177  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  178  git status
  179  git pull
  180  git status
  181  git add .
  182  git commint -m 'testing'
  183  git push
  184  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  185  kubectl port-forward svc/argocd-server -n argocd 8080:443
  186  kubectl port-forward svc/argocd-server -n argocd 8080:443
  187  kubectl get pods -A
  188  ./setup-cluster.sh 
  189  kubectl get pods -A
  190  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  191  kubectl port-forward svc/argocd-server -n argocd 8080:443
  192  ./setup-cluster.sh 
  193  kubectl get pods -A
  194  kubectl logs -n argocd argocd-repo-server-6f7d47d64-q9wgb  
  195  kubectl get pods -A
  196  ./setup-cluster.sh 
  197  kubectl
  198  kubectl get pods -A
  199  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  200  kubectl port-forward svc/argocd-server -n argocd 8080:443
  201  kubectl get pods -A
  202  kubectl port-forward svc/argocd-server -n argocd 8080:443
  203  git add .
  204  git commit -m 'changed memory to 3000'
  205  git push
  206  ./setup-cluster.sh 
  207  kubectl get pods -A
  208  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  209  kubectl port-forward svc/argocd-server -n argocd 8080:443
  210  kubectl logs 27b701c1402ad1d42dafedda7eaf93ddf06acf8e67929051664f04be98af7cd3
  211  kubectl logs -n ArgoCD 27b701c1402ad1d42dafedda7eaf93ddf06acf8e67929051664f04be98af7cd3
  212  kubectl port-forward svc/argocd-server -n argocd 8080:443
  213  kubectl create namespace tekton-runs
  214  ./setup-cluster.sh 
  215  kubectl create namespace tekton-runs
  216  kubectl create secret generic gitlab-deimosdev --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITLAB_USER) --from-literal password=$(echo $GITLAB_TOKEN)
  217  kubectl annotate secret/gitlab-deimosdev tekton.dev/git-0=https://gitlab.com/deimosdev -n tekton-runs
  218  git add .
  219  git push -m 'tekton creation'
  220  git commit -m 'tekton creation'
  221  git push
  222  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  223  kubectl get pods -A
  224  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  225  kubectl create namespace tekton-pipelines
  226  kubectl get pods -A
  227  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  228  kubectl port-forward svc/argocd-server -n argocd 8080:443
  229  kubectl logs argocd-server-6b8b47d465-bpjx4 -n argocd
  230  kubectl logs argocd-server-6b8b47d465-bpjx4  -n argocd -p
  231  ./setup-cluster.sh 
  232  kubectl get pods -A
  233  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  234  ./scripts/build-and-push-local.sh
  235  git add .
  236  git commit -m 'changed tekton repo'
  237  git push
  238  kubectl get pods -A
  239  ./setup-cluster.sh 
  240  kubectl get pods -A
  241  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  242  kubectl port-forward svc/argocd-server -n argocd 8080:443
  243  kubectl port-forward svc/argocd-server -n argocd 8080:443
  244  ./scripts/build-and-push-local.sh
  245  kubectl port-forward svc/argocd-server -n argocd 8080:443
  246  kubectl get pods -A
  247  kubectl port-forward svc/argocd-server -n argocd 8080:443
  248  kubectl get pods -A
  249  kubectl create namespace tekton-runs
  250  ./setup-cluster.sh 
  251  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  252  kubectl get pods -A
  253  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  254  kubectl port-forward svc/argocd-server -n argocd 8080:443
  255  ./setup-cluster.sh 
  256  kubectl get pods -A
  257  ./setup-cluster.sh 
  258  git add .
  259  git commit -m 'increased memory'
  260  git push
  261  ./setup-cluster.sh 
  262  minikube delete -p sips-cicd
  263  docker pull docker.io/docker/dockerfile:1.4
  264  minikube status
  265  minikube startt
  266  minikube start
  267  minikube version
  268  ./setup-cluster.sh 
  269  docker pull docker.io/docker/dockerfile:1.4
  270  kubectl get pods -A
  271  ./setup-cluster.sh 
  272  kubectl get pods -A
  273  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  274  ./scripts/build-and-push-local.sh
  275  ./setup-cluster.sh 
  276  minikube logs
  277  ./setup-cluster.sh 
  278  minikube start
  279  ./setup-cluster.sh 
  280  kubectl get pods -A
  281  git add .
  282  git commit -m 'rabbitmq'
  283  git push
  284  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  285  git add .
  286  git commit -m 'loadgenerator repo'
  287  git push
  288  kubectl get pods -A
  289  kubectl port-forward svc/argocd-server -n argocd 8080:443
  290  kubectl create namespace tekton-runs
  291  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  292  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  293  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  294  kubectl h
  295  kubectl get pods -A
  296  ./scripts/build-and-push-local.sh
  297  ./setup-cluster.sh 
  298  kubectl get pods -A
  299  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  300  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  301  kubectl get pods -A
  302  git add .
  303  git commit -m 'environment changes'
  304  git push
  305  kubectl get pods -A
  306  git add .
  307  git commit -m 'podtato-head clone'
  308  git push
  309  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  310  kubectl create namespace tekton-pipeline
  311  kubectl create namespace tekton-runs
  312  kubectl get namespaces
  313  kubectl config get-contexts
  314  kubectl get pods -n tekton-runs
  315  git add .
  316  git commit
  317  git commit -m 'tekon pipeline update '
  318  git push
  319  git add .
  320  git commit -m 'add-node- buildpack'
  321  git push
  322  ./scripts/install-score-argocd.sh
  323  mkdir workloads
  324  score-argocd validate
  325  score-argocd run
  326  score-argocd validate
  327  score-argocd run
  328  git add .
  329  git commit -m 'add argocd manifest'
  330  git push
  331  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  332  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  333  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  334  kubectl create namespace tekton-pipelines
  335  kubectl get namespaces
  336  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  337  kubectl get pods -n tekton-pipelines
  338  kubectl port-forward svc/argocd-server -n argocd 8080:443
  339  ./setup-cluster.sh 
  340  kubectl get pods -A
  341  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  342  ./scripts/build-and-push-local.sh
  343  tree
  344  VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
  345  sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
  346  sudo chmod +x /usr/local/bin/argocd
  347  VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
  348  sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
  349  sudo chmod +x /usr/local/bin/argocd
  350  git add .
  351  git committ -m 'padtatoheadargocd'
  352  git commit -m 'padtatoheadargocd'
  353  git push
  354  ./setup
  355  ./setup-cluster.sh 
  356  kubectl get pods -A
  357  ./scripts/build-and-push-local.sh
  358  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  359  kubectl port-forward svc/argocd-server -n argocd 8080:443
  360  kubectl get pods -A
  361  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  362  kubectl port-forward svc/argocd-server -n argocd 8080:443
  363  ./setup-cluster.sh 
  364  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  365  make podtato-head-verify.
  366  make build-microservices-images
  367  sudo make install-requirements.
  368  make push-microservices-images
  369  kubectl get pods -A
  370  kubectl port-forward service/podtatohead-podtatoserver -n podtatoargocd 9090:9000
  371  git add .
  372  git commit -m 'podtatohead yaml'
  373  git push
  374  git add .
  375  git commit -m 'podtato-head yaml add'
  376  git push
  377  git add .
  378  git commit -m 'update podtato'
  379  git push origin main
  380  git add .
  381  git commit -m 'podtatohead kustomization'
  382  git push
  383  git add .
  384  git commit -m 'podtatohead kustomization'
  385  git push origin main
  386  kubectl get pods -A
  387  ./setup-cluster.sh 
  388  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  389  kubectl get pods -A
  390  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  391  kubectl port-forward svc/argocd-server -n argocd 8080:443
  392  kubectl get pods -A
  393  kubectl port-forward svc/argocd-server -n argocd 8080:443
  394  minikube start
  395  kubectl get pods -A
  396  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  397  ./setup-cluster.sh 
  398  kubectl get pods -A
  399  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  400  kubectl get pods -A
  401  kubectl apply -f environments/overlays/base/podtatohead.yaml
  402  git add .
  403  git commit -m 'podtatohead namespace'
  404  git push
  405  kubectl apply -f environments/overlays/base/podtatohead.yaml
  406  kubectl get namespaces
  407  kubectl ger pods -A
  408  kubectl get pods -A
  409  kubectl apply -f environments/overlays/base/node-web-app.yaml
  410  kubectl get namespaces
  411  kubectl get pods -A
  412  kubectl port-forward svc/argocd-server -n argocd 8080:443
  413  ./setup-cluster.sh 
  414  minikube start -p sips-cicd
  415  clear
  416  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  417  kubectl get pods -A
  418  kubectl describe argocd-server-6b8b47d465-q27fc 
  419  kubectl describe argocd-server-6b8b47d465-q27fc -n argocd
  420  kubectl get pods -A
  421  kubectl get pods -n argocd
  422  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  423  kubectl port-forward svc/argocd-server -n argocd 8080:443
  424  minikube start -p sips-cicd
  425  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  426  kubectl port-forward svc/argocd-server -n argocd 8080:443
  427  docker pull docker.io/docker/dockerfile:1.4
  428  minukube start -p sips-cicd
  429  minikube start -p sips-cicd
  430  docker pull kindest/base
  431  minikube start -p sips-cicd
  432  minikube delete
  433  minikube start -p sips-cicd
  434  docker pull gcr.io/k8s-minikube/kicbase:v0.0.20
  435  minikube start -p sips-cicd
  436  minikube delete
  437  minikube start -p sips-cicd
  438  ./setup-cluster.sh 
  439  minikube start -p sips-cicd
  440  kubectl get pods -A
  441  ./setup-cluster.sh 
  442  kubectl get pods -A
  443  ./setup-cluster.sh 
  444  minikube start -p sips-cicd
  445  kubectl get pods -A
  446  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  447  git add .
  448  git commit -m 'podtatohead path fixed'
  449  git push
  450  git add .
  451  git commit -m 'podtatohead path fixed'
  452  git push origin main
  453  minikube start -p sips-cicd
  454  kubectl get pods -A
  455  git add .
  456  git commit -m 'loadgenerator repo fix'
  457  git push
  458  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  459  kubectl port-forward svc/argocd-server -n argocd 8080:443
  460  kubectl get pods -A
  461  minikube start -p sips-cicd
  462  kubectl get pods -A
  463  git add .
  464  git commit -m 'build podtatohead'
  465  git push
  466  kubectl get pipelinerun test-podtato-head -n tekton-runs
  467  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  468  kubectl get crds | grep tekton.dev
  469  git add .
  470  git commit -m 'build podtatohead'
  471  git push
  472  
  473  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  474  
  475  kubectl create namespace tekton-runs
  476  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  477  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  478  
  479  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  480  kubectl get namespaces -A
  481  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  482  kubectl port-forward svc/argocd-server -n argocd 8080:443
  483  kubectl get pods -A
  484  minikube start -p sips-cicd
  485  kubectl get pods -A
  486  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  487  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  488  kubectl get pods -A
  489  kubectl create namespace tekton-runs
  490  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  491  kubectl port-forward service/podtatohead-podtatoserver -n podtatoargocd 9090:9000
  492  kubectl get pods -A
  493  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  494  kubectl create namespace tekton-runs
  495  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  496  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  497  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  498  kubectl apply -f https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml
  499  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  500  kubectl port-forward service/podtatohead-podtatoserver -n podtatoargocd 9090:9000
  501  kubectl port-forward service/podtatohead-podtato-head-entry -n podtatohead 9090:9000
  502  kubectl port-forward service/podtatohead-podtato-head-entry -n podtato-head 9090:9000
  503  kubectl get namespaces -A
  504  git add .
  505  gti commit -m 'changes'
  506  gti committ -m 'changes'
  507  giti commit -m 'changes'
  508  git commit -m 'changes'
  509  git push
  510  git push origin main
  511  git add .
  512  git commit -m 'diagram'
  513  git push
  514  kubectl port-forward svc/argocd-server -n argocd 8080:443
  515  kubectl get pods -A
  516  kubectl --namespace tekton-pipelines port-forward svc/tekton-dashboard 9097:9097
  517  docker images
  518  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  519  docker images
  520  kubectl --namespace tekton-pipelines port-forward svc/tekton-dashboard 9097:9097
  521  kubectl get service -n tekton-pipeline
  522  kubectl get service -n tekton-pipelines
  523  kubectl create namespace tekton-runs
  524  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  525  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  526  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  527  kubectl get svc -n tekton-runs 
  528  kubectl get namespaces
  529  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  530  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  531  kubectl get pods -A
  532  kubectl get pods -A | grep dashboard
  533  kubectl get pods -n tekton-pipelines
  534  kubectl get svc -n tekton-pipelines
  535  kubectl delete namespace tekton-runs
  536  kubectl get pods -A | grep tekton
  537  kubectl delete namespace tekton-pipelines
  538  kubectl delete namespace tekton-pipelines-resolvers
  539  kubectl get pods -A | grep tekton
  540  kubectl get pods -A
  541  kubectl create namespace tekton-runs
  542  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  543  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  544  git add .
  545  git commit -m 'tekton recreate'
  546  git push
  547  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  548  kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml
  549  kubectl get pods --namespace tekton-pipelines --watch
  550  kubectl get pods -A
  551  kubectl get pods -n tekton-pipelines
  552  kubectl get pods -n tekton
  553  kubectl apply -f environments/overlays/base/tekton.yaml
  554  kubectl get pods -n tekton
  555  kubectl get pods -n tekton-pipelines
  556  git add .
  557  git commit -m 'tekton url update'
  558  git push
  559  kubectl get pods --namespace argocd
  560  kubectl apply -f environments/overlays/base/tekton.yaml
  561  kubectl get pods --namespace argocd
  562  kubectl get pods --namespaces
  563  kubectl get namespaces
  564  kubectl get pods --namespace tekton-pipelines --watch
  565  kubectl get pods --namespace argocd
  566  kubectl get pods --namespaces
  567  kubectl get pods -n tekton-pipelines
  568  kubectl get pods -A
  569  kubectl get pods --namespaces
  570  kubectl get pods --namespace argocd
  571  kubectl port-forward svc/argocd-server -n argocd 8080:443
  572  minikube start -p sips-cicd
  573  kubectl get pods --namespace argocd
  574  kubectl get pods --namespaces
  575  kubectl get pods -n tekton-pipelines
  576  kubectl apply -f https://github.com/tektoncd/dashboard/releases/latest/download/tekton-dashboard-release.yaml
  577  wget -O tekton-dashboard-release.yaml <URL>
  578  # or using curl
  579  # curl -o tekton-dashboard-release.yaml <URL>
  580  kubectl get pods -n tekton-pipelines
  581  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  582  kubectl create namespace tekton-runs
  583  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  584  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  585  docker images
  586  ./scripts/build-and-push-local.sh
  587  kubectl port-forward svc/argocd-server -n argocd 8080:443
  588  minikube start -p sips-cicd
  589  kubectl get pods -A
  590  ./scripts/build-and-push-local.sh
  591  docker ps
  592  docker images
  593  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  594  kubectl port-forward svc/argocd-server -n argocd 8080:443
  595  kubectl get namespaces -A
  596  kubectl get pods -A
  597  minikube start -p sips-cicd
  598  kubectl get pods -A
  599  kubectl get namespaces -A
  600  kubectl get pods -A
  601  ./setup-cluster.sh 
  602  ./scripts/build-and-push-local.sh
  603  kubectl get pods -A
  604  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  605  ./scripts/install-score-argocd.sh
  606  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  607  git add .
  608  git commit -m 'updates'
  609  git push
  610  git add .
  611  git commit -m 'tekton run'
  612  git push
  613  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  614  minikube start -p sips-cicd
  615  kubectl get pods -A
  616  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  617  kubectl get pods -A
  618  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  619  kubectl port-forward svc/argocd-server -n argocd 8080:443
  620  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  621  kubectl port-forward svc/argocd-server -n argocd 8080:443
  622  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  623  kubectl port-forward svc/argocd-server -n argocd 8080:443
  624  kubectl port-forward svc/argocd-server -n argocd 8080:443
  625  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  626  kubectl port-forward svc/argocd-server -n argocd 8080:443
  627  kubectl port-forward svc/argocd-server -n argocd 8080:443
  628  minikube start -p sips-cicd
  629  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  630  kubectl port-forward svc/argocd-server -n argocd 8080:443
  631  kubectl get pods -A
  632  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  633  kubectl port-forward svc/argocd-server -n argocd 8080:443
  634  minikube start -p sips-cicd
  635  kubectl get pods -A
  636  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  637  kubectl port-forward svc/argocd-server -n argocd 8080:443
  638  kubectl pods -A
  639  kubectl get pods -A
  640  minkube start -p sips-cicd
  641  minikube start -p sips-cicd
  642  kubectl get pods -A
  643  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  644  kubectl get pods -A
  645  kubectl get namespaces
  646  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  647  kubectl create namespace tekton-runs
  648  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  649  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  650  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  651  git add .
  652  git status
  653  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  654  kubectl get pods -A
  655  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  656  kubectl get pods -A
  657  kubectl get svc -n tekton-pipelines
  658  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  659  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  660  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  661  git add .
  662  git commit -m 'kaniko to paketo'
  663  git push
  664  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  665  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  666  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  667  minikube start -p sips-cicd
  668  kubectl get pods -A
  669  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  670  kubectl port-forward service/podtatohead-podtatoserver -n podtatoargocd 9090:9000
  671  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  672  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  673  git add .
  674  git committ -m 'removed lint'
  675  git commit -m 'removed lint'
  676  git push
  677  git add .
  678  git commit -m 'podtato build name update'
  679  git push
  680  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  681  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  682  docker images
  683  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  684  git add .
  685  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  686  git add .
  687  git commit -m 'head server name fix'
  688  git push
  689  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  690  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  691  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  692  git add .
  693  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  694  git add .
  695  git commit -m 'changes'
  696  git push
  697  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  698  git add .
  699  git commit -m 'changes'
  700  git push
  701  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  702  dcoker images
  703  docker images
  704  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  705  kubectl port-forward svc/argocd-server -n argocd 8080:443
  706  history
  707  minikube start -p sips-cicd
  708  kubectl get pods -A
  709  docker images
  710  kubectl get namespaces
  711  kubectl get pods -A
  712  minikube start -p sips-cicd
  713  kubectl get pods -A
  714  ./setup-cluster.sh 
  715  kubectl get pods -A
  716  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  717  kubectl port-forward svc/argocd-server -n argocd 8080:443
  718  minikube restart -p sips-cicd
  719  minikube start -p sips-cicd
  720  kubectl get pods -A
  721  ```
  722  kubectl port-forward svc/argocd-server -n argocd 8080:443
  723  kubectl port-forward svc/argocd-server -n argocd 8080:443~
  724  kubectl port-forward svc/argocd-server -n argocd 8080:443
  725  minikube start -p sips-cicd
  726  kubectl get pods -A
  727  minikube start -p sips-cicd
  728  kubectl get pods -A
  729  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  730  minikube start -p sips-cicd
  731  kubectl get pods -A
  732  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  733  kubectl port-forward svc/argocd-server -n argocd 8080:443
  734  kubectl get pods -A
  735  minikube start -p sips-cicd
  736  kubectl get pods -A
  737  kubectl port-forward svc/argocd-server -n argocd 8080:443
  738  kubectl get pods -A
  739  minikube start -p sips-cicd
  740  ./setup-cluster.sh 
  741  kubectl get pods -A
  742  ./setup-cluster.sh 
  743  kubectl get pods -A
  744  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  745  kubectl port-forward svc/argocd-server -n argocd 8080:443
  746  kubectl get pods -A
  747  minikube start -p sips-cicd
  748  kubectl get pods -A
  749  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  750  kubectl apply -f environments/annotations/base/podtato-head-build.yaml   
  751  kubectl get pods -A
  752  ubectl get pods
  753  kubectl get events -n <namespace>
  754  kubectl get events -n myapp
  755  kubectl create serviceaccount github-deimoscloud -n tekton-runs
  756  kubectl patch serviceaccount github-deimoscloud -p '{"secrets":[{"name": "github-deimoscloud"}]' -n tekton-runs
  757  minikube start -p sips-cicd
  758  kubectl get pods -A
  759  ./scripts/build-and-push-local.sh
  760  kubectl get pods -A
  761  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  762  kubectl port-forward svc/node-web-app -n myapp 8081:8081 
  763  kubectl port-forward svc/podtato-head -n myapp 8081:8081 
  764  ./scripts/build-and-push-local.sh
  765  kubectl apply -f environments/overlays/base/node-web-app.yaml
  766  git add .
  767  git commit -m 'node-web-app tag 2 version'
  768  git add .
  769  git commit -m 'node-web-app tag 2 version'
  770  git push
  771  kubectl describe deployment node-web-app -n myapp
  772  ./scripts/build-and-push-local.sh
  773  kubectl describe deployment node-web-app -n myapp
  774  git add .
  775  ./scripts/build-and-push-local.sh
  776  git add .
  777  git commit -m 'node-web-app tag 1 version'
  778  git push
  779  kubectl logs deployment/argocd-image-updater -n argocd
  780  git add .
  781  git commit -m 'added observability'
  782  git push
  783  kubectl port-forward svc/loadgenerator -n myapp 8089:8089
  784  kubectl port-forward svc/allinone-query -n observability 16686:16686
  785  git add .
  786  git commit -m 'loadgenerator'
  787  git push
  788  kubectl port-forward svc/loadgenerator -n myapp 8089:8089
  789  git add .
  790  git commit -m 'loadgenerator'
  791  git push
  792  kubectl port-forward svc/loadgenerator -n myapp 8089:8089
  793  git add .
  794  git commit -m 'loadgenerator changed'
  795  git push
  796  kubectl get pods -A
  797  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097   
  798  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  799  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097   
  800  kubectl get pods -A
  801  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  802  kubectl create namespace tekton-runs
  803  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  804  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  805  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  806  kubectl get pods -A
  807  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  808  kubectl port-forward svc/argocd-server -n argocd 8080:443
  809  minikube start -p sips-cicd
  810  kubectl get pods -A
  811  kubectl port-forward svc/argocd-server -n argocd 8080:443
  812  kubectl get pods -A
  813  ./scripts/build-and-push-local.sh
  814  kubctl logs argocd-dex-server
  815  minikube start -p sips-cicd
  816  kubectl get pods -A
  817  ./setup-cluster.sh 
  818  kubectl get pods -A
  819  cat /.kube/configg
  820  cat /.kube/config
  821  cat  ~/.kube/config
  822  pwd
  823  kubectl get pods -A
  824  kubectl logs -n argocd argocd-server-6b8b47d465-gw5tb  
  825  kubectl get pods -A
  826  kubectl logs -n argocd argocd-server-6b8b47d465-gw5tb  
  827  kubectl get pods -A
  828  kubectl logs -n argocd-server-6b8b47d465-gw5tb  
  829  kubectl logs -n argocd -p argocd-server-6b8b47d465-gw5tb  
  830  kubectl logs argocd-server-6b8b47d465-gw5tb -n argocd
  831  kubectl logs argocd-repo-server-6f7d47d64-tlhc5 -n argocd
  832  kubectl get pods -A
  833  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  834  kubectl port-forward svc/argocd-server -n argocd 8080:443
  835  kubectl get pods -A
  836  kubectl port-forward svc/argocd-server -n argocd 8081:443
  837  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  838  kubectl get pods -A
  839  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  840  kubectl get pods -A
  841  ./scripts/build-and-push-local.sh
  842  docker images
  843  kubectl get pods -A
  844  kubectl get namespaces
  845  minikube start -p sips-cicd
  846  kubectl get pods -A
  847  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  848  kubectl port-forward svc/argocd-server -n argocd 8080:443
  849  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  850  kubect get svc -A
  851  kubectl get svc -A
  852  kubectl logs tekton-operator-webhook  -n tekton
  853  kubectl logs tekton-operator-webhook-68d89f5c98-glhmq   -n tekton
  854  minikube start -p sips-cicd
  855  kubectl get svc -A
  856  kubectl get pods -A
  857  ./setup-cluster.sh 
  858  kubectl get pods -A
  859  ./scripts/build-and-push-local.sh
  860  kubectl get pods -A
  861  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  862  kubectl get pods -A
  863  kubectl create namespace tekton-runs
  864  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  865  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  866  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  867  kubectl get pods -A
  868  ./scripts/build-and-push-local.sh
  869  kubectl get pods -A
  870  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  871  kubectl port-forward svc/argocd-server -n argocd 8081:443
  872  kubectl port-forward svc/argocd-server -n argocd 8080:443
  873  kubectl port-forward svc/argocd-server -n argocd 8080:443
  874  kubectl get pods -A
  875  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  876  kubectl get pods -A
  877  git add .
  878  git commit -m 'testing'
  879  kubectl get pods -A
  880  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097   
  881  kubectl port-forward svc/argocd-server -n argocd 8082:443
  882  kubectl get pods -A
  883  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  884  kubectl port-forward svc/argocd-server -n argocd 8080:443
  885  kubectl get pods -A
  886  kubectl get svc -n tekton-pipelines
  887  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  888  kubectl get svc -n tekton-pipelines
  889  kubectl get pods -A
  890  kubectl port-forward svc/argocd-server -n argocd 8081:443
  891  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  892  kubectl port-forward svc/argocd-server -n argocd 8080:443
  893  kubectl port-forward svc/argocd-server -n argocd 8082:443
  894  kubectl port-forward svc/argocd-server -n argocd 8083:443
  895  kubectl get pods -A
  896  kubectl get logs test-podtato-head-build-podtato-head-build-pod -n tekton-runs
  897  kubectl logs test-podtato-head-build-podtato-head-build-pod -n tekton-runs
  898  kubectl describe  test-podtato-head-build-podtato-head-build-pod -n tekton-runs
  899  kubectl describe test-podtato-head-build-podtato-head-build-pod -n tekton-runs
  900  kubectl logs test-podtato-head-build-podtato-head-build-pod -n tekton-runs
  901  minikube start -p sips-cicd
  902  kubectl get pods -A
  903  minikube start -p sips-cicd
  904  docker pull anjone/kicbase
  905  minikube start --vm-driver=docker --base-image="anjone/kicbase" 
  906  minikube start -p sips-cicd
  907  kubectl get pods -A
  908  minikube start --vm-driver=docker --base-image="anjone/kicbase" 
  909  minikube start -p sips-cicd
  910  kubectl get pods -A
  911  kubectl port-forward svc/argocd-server -n argocd 8080:443
  912  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  913  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  914  kubectl port-forward svc/argocd-server -n argocd 8083:443
  915  ./setup-cluster.sh 
  916  minikube start -p sips-cicd
  917  kubectl get pods -A
  918  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  919  ./scripts/build-and-push-local.sh
  920  git add .
  921  git commit -m 'podtato build'
  922  git push
  923  kubectl get pods -A
  924  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  925  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  926  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  927  kubectl create secret generic github-deimoscloud --type kubernetes.io/basic-auth --namespace tekton-runs --from-literal username=$(echo $GITHUB_USER) --from-literal password=$(echo $GITHUB_TOKEN)
  928  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
  929  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  930  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  931  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  932  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9093:9097
  933  kubectl get pods -A
  934  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
  935  kubectl port-forward svc/argocd-server -n argocd 8084:443
  936  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9099:9097
  937  kubectl get pods -A
  938  kubectl delete tekton-dashboard-75966db7cf-dpsr7  -n tekton-pipelines
  939  kubectl delete pod tekton-dashboard-75966db7cf-dpsr7  -n tekton-pipelines
  940  kubectl get pods -A
  941  kubectl delete pod tekton-pipelines-controller-7fbd5457d5-qmlq9   -n tekton-pipelines
  942  kubectl get pods -A
  943  kubectl delete pod podtatohead-entry-8694fb88d9-jp92n   -n tekton-pipelines
  944  kubectl delete pod podtatohead-entry-8694fb88d9-jp92n   -n myapp
  945  kubectl get pods -A
  946  kubectl port-forward svc/argocd-server -n argocd 8084:443
  947  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
  948  kubectl apply -f environments/annotations/base/secrets.yaml
  949  git status
  950  git add .
  951  git commit -m 'changes'
  952  git push
  953  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  954  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  955  kubectl get pods -A
  956  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  957  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  958  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9099:9097
  959  minikube start -p sips-cicd
  960  kubectl get pods -A
  961  ./setup-cluster.sh 
  962  kubectl get pods -A
  963  ./setup-cluster.sh 
  964  kubectl get pods -A
  965  ./setup-cluster.sh 
  966  kubectl get pods -A
  967  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  968  kubectl port-forward svc/argocd-server -n argocd 8080:443
  969  kubectl get pods -A
  970  ./scripts/build-and-push-local.sh
  971  kubectl get pods -A
  972  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  973  kubectl get pods -A
  974  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  975  kubectl apply -f environments/annotations/base/secrets.yaml
  976  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  977  kubectl get pods -A
  978  kubectl get secrets -n tekton-runs
  979  git add .
  980  git commit -m 'testing pipeline'
  981  git push
  982  git add .
  983  git commit -m 'testing pipeline'
  984  git push
  985  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  986  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9091:9097
  987  kubectl get pods -n tekton-runs
  988  kubectl get pods.tekton.dev -n tekton-runs
  989  kubectl api-resources | grep tekton
  990  kubectl get pipelines.tekton.dev -n tekton-runs
  991  kubectl get pipelinruns.tekton.dev -n tekton-runs
  992  kubectl get pipelineruns.tekton.dev -n tekton-runs
  993  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  994  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
  995  minikube start -p sips-cicd
  996  kubectl get pods -A
  997  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  998  kubectl get secrets -n tekton-runs
  999  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
 1000  kubectl get secrets -n tekton-runs
 1001  kubectl describe  secrets -n tekton-runs
 1002  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1003  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
 1004  docker images
 1005  kubectl get svc
 1006  kubectl get svc -A
 1007  minikube start -p sips-cicd
 1008  kubectl get pods -A
 1009  ./setup-cluster.sh 
 1010  kubectl get pods -A
 1011  ./scripts/build-and-push-local.sh
 1012  kubectl get pods -A
 1013  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
 1014  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1015  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9095:9097
 1016  docker images
 1017  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1018  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1019  kubectl port-forward svc/argocd-server -n argocd 8084:443
 1020  git add .
 1021  git commit -m 'remove loadgenerator'
 1022  git push
 1023  docker images
 1024  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1025  kubectl port-forward service/podtatohead-podtato-head-entry -n myapp 9090:9000
 1026  kubectl get pods -A
 1027  kubectl port-forward service/podtatohead-entry-8694fb88d9-2dxvz  -n myapp 9090:9000
 1028  kubectl port-forward service/podtatohead-entry  -n myapp 9090:9000
 1029  kubectl port-forward service/podtatohead-entry  -n myapp 9094:9000
 1030  git add .
 1031  git commit -m 'testing'
 1032  git push
 1033  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1034  kubectl port-forward service/podtatohead-entry  -n myapp 9094:9000
 1035  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9095:9097
 1036  kubectl port-forward service/podtatohead-podtato-head-entry -n myapp 9090:9000
 1037  kubectl port-forward service/podtatohead-entry  -n myapp 9094:9000
 1038  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1039  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
 1040  pwd
 1041  ls
 1042  cd src
 1043  cd ..
 1044  brew install gpg
 1045  cd local
 1046  cd environments/annotations/local
 1047  kustomize build .
 1048  cd environments/overlays/local
 1049  kustomize build .
 1050  pwd
 1051  kustomize build .
 1052  pwd
 1053  cd environments/overlays
 1054  cd ..
 1055  cd .
 1056  cd ..
 1057  cd overlays/local
 1058  kustomize build .
 1059  git add .
 1060  git commit -m 'mysql-build-test'
 1061  git push
 1062  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1063  cd ..
 1064  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1065  ./setup-cluster.sh 
 1066  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1067  kubectl get pods -A
 1068  watch kubectl get pods -A
 1069  kubectl get pods -A
 1070  kubectl logs argocd-server-6b8b47d465-p7gvm -n argocd
 1071  kubectl get pods -A
 1072  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1073  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1074  cd environments/annotations/base
 1075  ls
 1076  kustomize build .
 1077  cd ..
 1078  ls
 1079  cd sips-cicd/
 1080  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
 1081  helm repo update
 1082  helm install prometheus  prometheus-community/kube-prometheus-stack
 1083  kubectl get pod
 1084  watch kubectl get pod
 1085  kubectl get pods -A
 1086  kubectl get all
 1087  helm repo add grafana https://grafana.github.io/helm-charts
 1088  helm repo update
 1089  helm install sips-grafana grafana/grafana-agent-operator
 1090  kubectl get pod
 1091  kubectl get all
 1092  kubectl get svc
 1093  kubectl get pods -A
 1094  kubectl get all
 1095  kubectl get pods -A
 1096  helm repo add grafana https://grafana.github.io/helm-charts
 1097  helm install loki grafana/loki-stack--namespace loki --create-namespace --set grafana.enabled=true
 1098  helm install loki grafana/loki-stack--namespace default --set grafana.enabled=true
 1099  helm install loki grafana/loki-stack --namespace default --set grafana.enabled=true
 1100  kubectl get pods -A
 1101  kubectl create namespace monitoring
 1102  kubectl get pods -A
 1103  cd src/grafana
 1104  ./move-pods.sh 
 1105  chmod +x move-pods.sh
 1106  ./move-pods.sh
 1107  kubectl get pods -A
 1108  history
 1109  minikube start -p sips-cicd
 1110  kubectl get pods -A
 1111  kubectl describe prometheus-grafana-7b79ff765b-7v544 -n default
 1112  kubectl describe prometheus-grafana-7b79ff765b-7v544 
 1113  kubectl get pods -A
 1114  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1115  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1116  kubectl get pods -A
 1117  minikube start -p sips-cicd
 1118  kubectl get pods -A
 1119  watch kubectl get pods -A
 1120  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1121  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1122  kubectl port-forward svc/argocd-server -n argocd 8084:443
 1123  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1124  kubectl port-forward svc/argocd-server -n argocd 8081:443
 1125  watch kubectl get pods -A
 1126  kubectl describe prometheus-grafana-7b79ff765b-7v544  -n default
 1127  kubectl describe pod prometheus-grafana-7b79ff765b-7v544  -n default
 1128  kubectl get pods -A
 1129  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1130  helm repo add bitnami https://charts.bitnami.com/bitnami
 1131  helm install deimos-mysql bitnami/mysql
 1132  helm install deimos-mysql bitnami/mysql -f src/mysql/mysql-values.yaml
 1133  helm install sips-mysql bitnami/mysql -f src/mysql/mysql-values.yaml
 1134  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1135  git add . 
 1136  git comit -m 'mysql-test'
 1137  git commit -m 'mysql-test'
 1138  git push
 1139  kubectl apply -f mysql-chart/template/deployment.yaml
 1140  kubectl apply -f mysql-chart/template/service.yaml
 1141  kubectl apply -f mysql-chart/template/deployment.yaml
 1142  kubectl apply -f mysql-chart/template/service.yaml
 1143  git add .
 1144  git commit -m 'mysql changes'
 1145  git push
 1146  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1147  argocd app sync mysql
 1148  argocd repo add https://github.com/DeimosCloud/sips-cicd.git
 1149  kubectl get pods -A
 1150  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server argocd-server-6b8b47d465-p7gvm
 1151  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server https://127.0.0.1:8086/
 1152  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server https://127.0.0.1:8086
 1153  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server 127.0.0.1:8086
 1154  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server 127.0.0.1:8086 --insecure
 1155  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1156  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server 127.0.0.1:8086 --insecure --upsert
 1157  kubectl get pods -A
 1158  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server 127.0.0.1:8086 --insecure --upsert
 1159  ./setup-cluster.sh 
 1160  kubectl get pods -A
  sips-cicd :: default    sips-cicd    ≢  ﮫ0ms⠀   history
  941  kubectl delete pod tekton-pipelines-controller-7fbd5457d5-qmlq9   -n tekton-pipelines
  942  kubectl get pods -A
  943  kubectl delete pod podtatohead-entry-8694fb88d9-jp92n   -n tekton-pipelines
  944  kubectl delete pod podtatohead-entry-8694fb88d9-jp92n   -n myapp
  945  kubectl get pods -A
  946  kubectl port-forward svc/argocd-server -n argocd 8084:443
  947  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
  948  kubectl apply -f environments/annotations/base/secrets.yaml
  949  git status
  950  git add .
  951  git commit -m 'changes'
  952  git push
  953  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  954  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  955  kubectl get pods -A
  956  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  957  kubectl apply -f environments/annotations/base/node-web-app-build.yaml
  958  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9099:9097
  959  minikube start -p sips-cicd
  960  kubectl get pods -A
  961  ./setup-cluster.sh 
  962  kubectl get pods -A
  963  ./setup-cluster.sh 
  964  kubectl get pods -A
  965  ./setup-cluster.sh 
  966  kubectl get pods -A
  967  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  968  kubectl port-forward svc/argocd-server -n argocd 8080:443
  969  kubectl get pods -A
  970  ./scripts/build-and-push-local.sh
  971  kubectl get pods -A
  972  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  973  kubectl get pods -A
  974  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  975  kubectl apply -f environments/annotations/base/secrets.yaml
  976  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  977  kubectl get pods -A
  978  kubectl get secrets -n tekton-runs
  979  git add .
  980  git commit -m 'testing pipeline'
  981  git push
  982  git add .
  983  git commit -m 'testing pipeline'
  984  git push
  985  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  986  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9091:9097
  987  kubectl get pods -n tekton-runs
  988  kubectl get pods.tekton.dev -n tekton-runs
  989  kubectl api-resources | grep tekton
  990  kubectl get pipelines.tekton.dev -n tekton-runs
  991  kubectl get pipelinruns.tekton.dev -n tekton-runs
  992  kubectl get pipelineruns.tekton.dev -n tekton-runs
  993  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
  994  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
  995  minikube start -p sips-cicd
  996  kubectl get pods -A
  997  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
  998  kubectl get secrets -n tekton-runs
  999  kubectl annotate secret/github-deimoscloud tekton.dev/git-0=https://github.com/deimoscloud -n tekton-runs
 1000  kubectl get secrets -n tekton-runs
 1001  kubectl describe  secrets -n tekton-runs
 1002  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1003  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
 1004  docker images
 1005  kubectl get svc
 1006  kubectl get svc -A
 1007  minikube start -p sips-cicd
 1008  kubectl get pods -A
 1009  ./setup-cluster.sh 
 1010  kubectl get pods -A
 1011  ./scripts/build-and-push-local.sh
 1012  kubectl get pods -A
 1013  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9092:9097
 1014  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1015  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9095:9097
 1016  docker images
 1017  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1018  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1019  kubectl port-forward svc/argocd-server -n argocd 8084:443
 1020  git add .
 1021  git commit -m 'remove loadgenerator'
 1022  git push
 1023  docker images
 1024  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1025  kubectl port-forward service/podtatohead-podtato-head-entry -n myapp 9090:9000
 1026  kubectl get pods -A
 1027  kubectl port-forward service/podtatohead-entry-8694fb88d9-2dxvz  -n myapp 9090:9000
 1028  kubectl port-forward service/podtatohead-entry  -n myapp 9090:9000
 1029  kubectl port-forward service/podtatohead-entry  -n myapp 9094:9000
 1030  git add .
 1031  git commit -m 'testing'
 1032  git push
 1033  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1034  kubectl port-forward service/podtatohead-entry  -n myapp 9094:9000
 1035  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9095:9097
 1036  kubectl port-forward service/podtatohead-podtato-head-entry -n myapp 9090:9000
 1037  kubectl port-forward service/podtatohead-entry  -n myapp 9094:9000
 1038  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1039  kubectl port-forward svc/tekton-dashboard -n tekton-pipelines 9097:9097
 1040  pwd
 1041  ls
 1042  cd src
 1043  cd ..
 1044  brew install gpg
 1045  cd local
 1046  cd environments/annotations/local
 1047  kustomize build .
 1048  cd environments/overlays/local
 1049  kustomize build .
 1050  pwd
 1051  kustomize build .
 1052  pwd
 1053  cd environments/overlays
 1054  cd ..
 1055  cd .
 1056  cd ..
 1057  cd overlays/local
 1058  kustomize build .
 1059  git add .
 1060  git commit -m 'mysql-build-test'
 1061  git push
 1062  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1063  cd ..
 1064  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1065  ./setup-cluster.sh 
 1066  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1067  kubectl get pods -A
 1068  watch kubectl get pods -A
 1069  kubectl get pods -A
 1070  kubectl logs argocd-server-6b8b47d465-p7gvm -n argocd
 1071  kubectl get pods -A
 1072  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1073  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1074  cd environments/annotations/base
 1075  ls
 1076  kustomize build .
 1077  cd ..
 1078  ls
 1079  cd sips-cicd/
 1080  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
 1081  helm repo update
 1082  helm install prometheus  prometheus-community/kube-prometheus-stack
 1083  kubectl get pod
 1084  watch kubectl get pod
 1085  kubectl get pods -A
 1086  kubectl get all
 1087  helm repo add grafana https://grafana.github.io/helm-charts
 1088  helm repo update
 1089  helm install sips-grafana grafana/grafana-agent-operator
 1090  kubectl get pod
 1091  kubectl get all
 1092  kubectl get svc
 1093  kubectl get pods -A
 1094  kubectl get all
 1095  kubectl get pods -A
 1096  helm repo add grafana https://grafana.github.io/helm-charts
 1097  helm install loki grafana/loki-stack--namespace loki --create-namespace --set grafana.enabled=true
 1098  helm install loki grafana/loki-stack--namespace default --set grafana.enabled=true
 1099  helm install loki grafana/loki-stack --namespace default --set grafana.enabled=true
 1100  kubectl get pods -A
 1101  kubectl create namespace monitoring
 1102  kubectl get pods -A
 1103  cd src/grafana
 1104  ./move-pods.sh 
 1105  chmod +x move-pods.sh
 1106  ./move-pods.sh
 1107  kubectl get pods -A
 1108  history
 1109  minikube start -p sips-cicd
 1110  kubectl get pods -A
 1111  kubectl describe prometheus-grafana-7b79ff765b-7v544 -n default
 1112  kubectl describe prometheus-grafana-7b79ff765b-7v544 
 1113  kubectl get pods -A
 1114  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1115  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1116  kubectl get pods -A
 1117  minikube start -p sips-cicd
 1118  kubectl get pods -A
 1119  watch kubectl get pods -A
 1120  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1121  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1122  kubectl port-forward svc/argocd-server -n argocd 8084:443
 1123  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1124  kubectl port-forward svc/argocd-server -n argocd 8081:443
 1125  watch kubectl get pods -A
 1126  kubectl describe prometheus-grafana-7b79ff765b-7v544  -n default
 1127  kubectl describe pod prometheus-grafana-7b79ff765b-7v544  -n default
 1128  kubectl get pods -A
 1129  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1130  helm repo add bitnami https://charts.bitnami.com/bitnami
 1131  helm install deimos-mysql bitnami/mysql
 1132  helm install deimos-mysql bitnami/mysql -f src/mysql/mysql-values.yaml
 1133  helm install sips-mysql bitnami/mysql -f src/mysql/mysql-values.yaml
 1134  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1135  git add . 
 1136  git comit -m 'mysql-test'
 1137  git commit -m 'mysql-test'
 1138  git push
 1139  kubectl apply -f mysql-chart/template/deployment.yaml
 1140  kubectl apply -f mysql-chart/template/service.yaml
 1141  kubectl apply -f mysql-chart/template/deployment.yaml
 1142  kubectl apply -f mysql-chart/template/service.yaml
 1143  git add .
 1144  git commit -m 'mysql changes'
 1145  git push
 1146  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1147  argocd app sync mysql
 1148  argocd repo add https://github.com/DeimosCloud/sips-cicd.git
 1149  kubectl get pods -A
 1150  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server argocd-server-6b8b47d465-p7gvm
 1151  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server https://127.0.0.1:8086/
 1152  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server https://127.0.0.1:8086
 1153  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server 127.0.0.1:8086
 1154  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server 127.0.0.1:8086 --insecure
 1155  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1156  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server 127.0.0.1:8086 --insecure --upsert
 1157  kubectl get pods -A
 1158  argocd repo add https://github.com/DeimosCloud/sips-cicd.git --server 127.0.0.1:8086 --insecure --upsert
 1159  kubectl port-forward svc/argocd-server -n argocd 8086:443
 1160  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1161  kubectl run sips-mysql-client --rm --tty -i --restart='Never' --image  docker.io/bitnami/mysql:8.0.34-debian-11-r56 --namespace default --command -- bash
 1162  ./setup-cluster.sh 
 1163  kubectl get pods -A
 1164  history
 1165  kubectl get pods -A
 1166  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1167  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1168  ./scripts/build-and-push-local.sh
 1169  kubectl port-forward svc/argocd-server -n argocd 8086:443
 1170  minikube start -p sips-cicd
 1171  kubectl get pods -A
 1172  kubectl get pods -A grep | -n default
 1173  kubectl get all
 1174  kubectl get pod
 1175  kubectl get pods -A
 1176  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1177  kustomize version
 1178  kubectl get pods -A
 1179  kubectl apply -f environments/overlays/base/mysql-build.yaml
 1180  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1181  kubectl get pods -A
 1182  kubectl get all
 1183  kubectl get pods -A
 1184  kubectl run sips-mysql-client --rm --tty -i --restart='Never' --image  docker.io/bitnami/mysql:8.0.34-debian-11-r56 --namespace default --command -- bash
 1185  kubectl get pods -A
 1186  kubectl run sips-mysql-client --tty -i --restart='Never' --image docker.io/bitnami/mysql:8.0.34-debian-11-r56 --namespace myapp --command -- bash
 1187  kubectl run sips-mysql-client --tty -i --restart='Never' --image docker.io/bitnami/mysql:8.0.34-debian-11-r56 --namespace default --command -- bash
 1188  kubectl port-forward svc/argocd-server -n argocd 8086:443
 1189  minikube start -p sips-cicd
 1190  kubectl get pods -A
 1191  kubectl delete pod sips-mysql-client  
 1192  kubectl get pods -A
 1193  kubectl run sips-mysql-client --tty -i --restart='Never' --image docker.io/bitnami/mysql:8.0.34-debian-11-r56 --namespace default --command -- bash
 1194  kubectl get pods -A
 1195  kubectl delete pod sips-mysql-client  
 1196  kubectl get pods -A
 1197  minikube start -p sip-cicd
 1198  kubectl get pods -A
 1199  ./setup-cluster.sh 
 1200  kubectl get pods -A
 1201  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1202  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1203  kubectl port-forward svc/argocd-server -n argocd 8086:443
 1204  git add .
 1205  git commit -m 'test'
 1206  git push
 1207  git add .
 1208  git commit -m 'test'
 1209  git add .
 1210  git commit -m 'test'
 1211  git push
 1212  git add .
 1213  git commit -m 'test'
 1214  git push
 1215  git add .
 1216  git commit -m 'test mysql'
 1217  git push
 1218  git add .
 1219  git commit -m 'test mysql'
 1220  git push
 1221  cd src/mysql
 1222  git remote -v
 1223  git add .
 1224  git commit -m 'test mysql'
 1225  cd ..
 1226  cd 
 1227  pwd
 1228  cd ..
 1229  pws
 1230  pwd
 1231  ls
 1232  git add .
 1233  git commit -m 'test mysql'
 1234  git push
 1235  git add .
 1236  git commit -m 'test mysql'
 1237  git add .
 1238  git commit -m 'testing'
 1239  git push origin main
 1240  git add .
 1241  git commit -m 'testing'
 1242  git push origin main
 1243  git add .
 1244  git commit -m 'testing'
 1245  git push origin main
 1246  kubectl get pods -A
 1247  git add .
 1248  git commit -m 'testing mysql'
 1249  git push origin main
 1250  git add .
 1251  git commit -m 'testing mysql'
 1252  git push origin main
 1253  git add .
 1254  git commit -m 'testing mysql'
 1255  git push origin main
 1256  kubectl get pods -A
 1257  git add .
 1258  git commit -m 'testing mysql secrets'
 1259  git push origin main
 1260  kubectl get pods -A
 1261  kubectl describe pod mysql-0 
 1262  kubectl create secret generic mysql --from-literal=password=yourpassword --namespace=myapp
 1263  kubectl get secret mysql -n myapp
 1264  git add .
 1265  git commit -m 'testing mysql secrets'
 1266  git add .
 1267  git commit -m 'testing mysql secrets'
 1268  git push origin main
 1269  kubectl create secret generic mysql --from-literal=mysql-root-password=devpass123 --namespace=myapp
 1270  kubectl patch secret mysql -n myapp -p='{"data":{"mysql-root-password": "'$(echo -n 'devpass123' | base64)'"}}'
 1271  git add .
 1272  git commit -m 'testing mysql secrets'
 1273  git push origin main
 1274  kubectl delete secret mysql -n myapp
 1275  git add .
 1276  git commit -m 'testing mysql secrets'
 1277  git push origin main
 1278  git add .
 1279  git commit -m 'testing mysql secrets'
 1280  git push origin main
 1281  kubectl patch secret mysql-secrets -n myapp -p='{"data":{"rootPassword": "'$(echo -n 'devpass123' | base64)'"}}'
 1282  kubectl create secret mysql-secrets -n myapp -p='{"data":{"rootPassword": "'$(echo -n 'devpass123' | base64)'"}}'
 1283  kubectl patch secret mysql-secrets -n myapp -p='{"data":{"rootPassword": "'$(echo -n 'devpass123' | base64)'"}}'
 1284  git add .
 1285  git commit -m 'testing mysql secrets'
 1286  git push origin main
 1287  git add .
 1288  git commit -m 'testing mysql secrets'
 1289  git push origin main
 1290  git add .
 1291  git commit -m 'testing mysql secrets'
 1292  git push origin main
 1293  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1294  cd environments/overlays/base/mysql-build-old.yaml
 1295  cd environments/overlays/base
 1296  git add .
 1297  git commit -m 'testing mysql secrets'
 1298  git push origin main
 1299  kubecttl get pods -A
 1300  kubectl get pods -A
 1301  minikube start -p sips-cicd
 1302  kubectl get pods -A
 1303  ./setup-cluster.sh 
 1304  minikube start -p sips-cicd
 1305  kubectl get pods -A
 1306  ./setup-cluster.sh 
 1307  kubectl get pods -A
 1308  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1309  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1310  kubectl port-forward svc/argocd-server -n argocd 8086:443
 1311  git add .
 1312  git commit - 'grafana agent'
 1313  git commit -m 'grafana agent'
 1314  git push
 1315  kubectl apply -f environments/annotations/base/podtato-head-build.yaml
 1316  kubectl get pods -A
 1317  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1318  git add .
 1319  git commit -m 'grafana agent'
 1320  git push
 1321  git add .
 1322  git commit -m 'grafana agent'
 1323  ./scripts/build-and-push-local.sh
 1324  kubectl get pods -A
 1325  kubectl api-versions
 1326  git add .
 1327  git commit -m 'grafana agent'
 1328  git push origin main
 1329  kubectl get pods -A
 1330  git push 
 1331  git add .
 1332  git commit -m 'test'
 1333  git push origin main
 1334  git add .
 1335  git commit -m 'test'
 1336  git push origin main
 1337  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1338  kubectl port-forward svc/argocd-server -n argocd 8086:443
 1339  git add .
 1340  git commit -m 'grafana-static-mode-add'
 1341  git push origin main
 1342  kubectl -n default apply -f agent-bare.yaml
 1343  kubectl -n default apply -f src/grafana-agent-main/production/kubernetes/agent-bare.yaml
 1344  git add .
 1345  git commit -m 'grafana-static-mode-test'
 1346  git push origin main
 1347  kubectl apply -f agent-bare.yaml
 1348  kubectl apply -f src/grafana-agent-main/production/kubernetes/agent-bare.yaml
 1349  kubectl -n default apply -f src/grafana-agent-main/production/kubernetes/agent-bare.yaml
 1350  kubectl get pods -n default
 1351  kubectl -n default apply -f src/grafana-agent-main/production/kubernetes/agent-loki.yaml
 1352  kubectl -n default apply -f src/grafana-agent-main/production/kubernetes/agent-traces.yaml
 1353  kubectl get pods -n default
 1354  git add .
 1355  git commit -m 'grafana-agent'
 1356  git push origin main
 1357  kubectl get pods -A 
 1358  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1359  minikube start -p sips-cicd
 1360  kubectl get pods -A 
 1361  ./setup-cluster.sh 
 1362  kubectl get pods -A 
 1363  kubectl -n default apply -f src/grafana-agent-main/production/kubernetes/agent-traces.yaml
 1364  kubectl -n default apply -f src/grafana-agent-main/production/kubernetes/agent-loki.yaml
 1365  kubectl -n default apply -f src/grafana-agent-main/production/kubernetes/agent-bare.yaml
 1366  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1367  kubectl get pods -A 
 1368  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1369  kubectl get pods -A 
 1370  git add .
 1371  git commit -m 'testing'
 1372  git push origin main
 1373  kubectl get pods -A 
 1374  helm repo add grafana https://github.com/grafana/agent/tree/main/operations/helm/charts/grafana-agent
 1375  helm repo add grafana-agent https://github.com/grafana/agent/tree/main/operations/helm/charts/grafana-agent
 1376  helm repo add grafana-agent https://grafana.github.io/helm-charts
 1377  helm repo update
 1378  kubectl get pods -A 
 1379  kubectl create secret generic mysql-secret --from-literal=mysql-root-password=password --from-literal=MYSQL-ROOT-PASSSWORD=password -n myapp
 1380  git add .
 1381  git commit -m 'update mysql config'
 1382  git push origin main
 1383  git add .
 1384  git commit -m 'correct mysql secrets'
 1385  git push origin main
 1386  history
 1387  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n myapp
 1388  kubectl create secret generic mysql-secrets \  
 1389  kubectl create secret generic mysql-secret1 \  
 1390  kubectl create secret generic mysql-secrets
 1391  kubectl delete secret generic mysql-secrets
 1392  kubectl delete secret generic mysql-secrets -n myapp
 1393  kubectl delete secret mysql-secrets -n myapp
 1394  kubectl delete secret mysql-secret -n myapp
 1395  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n myapp 
 1396  git add . 
 1397  git commit -m 'update'
 1398  git add . 
 1399  git commit -m 'update'
 1400  git push origin main
 1401  kubectl get svc
 1402  kubectl get svc -n myapp
 1403  kubectl get svc -n grafana-agent
 1404  kubectl get svc -n myapp
 1405  git add . 
 1406  git commit -m 'update'
 1407  git push origin main
 1408  kubectl get svc -n myapp
 1409  kubectl get pods -A
 1410  git add .
 1411  git commit -m 'update mysql'
 1412  git push origin main
 1413  ./setup-cluster.sh 
 1414  minikube start -p sips-cicd
 1415  kubectl get pods -A
 1416  ./scripts/build-and-push-local.sh
 1417  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1418  git add .
 1419  git add . 
 1420  git commit -m 'mysql reload'
 1421  git push origin main 
 1422  kubectl get pods -A
 1423  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1424  ./setup-cluster.sh 
 1425  kubectl get pods -A
 1426  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1427  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1428  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1429  minikube start -p sips-cicd
 1430  kubectl get pods -A
 1431  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1432  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1433  git add .
 1434  giit commit -m 'kuztomise update'
 1435  git commit -m 'kuztomise update'
 1436  git push origin main 
 1437  ./setup-cluster.sh 
 1438  minikube start -p sips-cicd
 1439  kubectl get pods -A
 1440  watch kubectl get pods -A
 1441  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1442  git add .
 1443  git commit -m 'mysql secret name corrected'
 1444  git push origin main 
 1445  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n myapp
 1446  cd environments/
 1447  tree
 1448  kubectl get pods -A
 1449  ./setup-cluster.sh 
 1450  minikube start -p sips-cicd
 1451  kubectl get pods -A
 1452  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1453  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1454  git add .
 1455  git commit -m 'liveness probe fix'
 1456  git push origin main
 1457  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n myapp
 1458  git add .
 1459  git commit -m 'startup  probe adjust'
 1460  git push origin main
 1461  kubectl get pods -A
 1462  kubectl get svc -n myapp
 1463  $(brew --mygrafana)/etc/grafana-agent-flow/config.river
 1464  brew services restart grafana-agent-flow
 1465  kubectl port-forward svc/grafana-agent -n myapp 80:80
 1466  cd src/grafana-agent-main
 1467  tree
 1468  cd src/grafana-agent-main/operations/helm
 1469  cd ..
 1470  cd src/grafana-agent-main/operations/helm
 1471  pwd
 1472  cd /grafana-agent-main/operations/helm
 1473  cd src/grafana-agent-main/operations
 1474  cd /grafana-agent-main/operations
 1475  cd grafana-agent-main/operations
 1476  ls
 1477  cd helm/
 1478  tree
 1479  pwd
 1480  git add .
 1481  git commit -m 'configuring grafana values'
 1482  git push origin main
 1483  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1484  argocd app get grafana-agent -n argocd
 1485  argocd app get grafana-agent -n myapp
 1486  kubectl get pods -A
 1487  kubectl port-forward svc/grafana-agent -n myapp 80:80
 1488  ./setup-cluster.sh 
 1489  minikube start -p sips-cicd
 1490  kubectl get pods -A 
 1491  kubectl port-forward svc/grafana-agent -n myapp 80:80
 1492  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1493  kubectl get pods -A 
 1494  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1495  kubectl get pods -a
 1496  kubectl get pods -A
 1497  kubectl get secrets -n myapp
 1498  kubectl describe secret mysql-secret -n myapp
 1499  kubectl get svc -n observability 
 1500  git add .
 1501  git committ -m 'mysqld exporter assign to config map'
 1502  git commit -m 'mysqld exporter assign to config map'
 1503  git push origin main
 1504  git push
 1505  git push origin main
 1506  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 85:80
 1507  kubectl port-forward svc/grafana-agent -n myapp 80:80
 1508  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1509  kubectl get pods -A
 1510  ./setup-cluster.sh 
 1511  kubectl get pods -A
 1512  git add .
 1513  git commit -m 'deploy mysqld exporter'
 1514  git push origin main 
 1515  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1516  ./scripts/build-and-push-local.sh
 1517  git add .
 1518  git commit -m 'deploy mysqld exporter'
 1519  git push origin main 
 1520  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1521  cd environments/overlays/base
 1522  kustomize build .
 1523  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts && helm repo update && helm install ksm prometheus-community/kube-state-metrics -n myapp
 1524  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts && helm repo update && helm install nodeexporter prometheus-community/prometheus-node-exporter -n myapp
 1525  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1526  kubectl get pods -A
 1527  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1528  git add .
 1529  git commit -m 'fix mysqld exporter'
 1530  git push origin main 
 1531  git add .
 1532  git commit -m 'fix mysqld exporter'
 1533  git push origin main 
 1534  kubectl get svc -myapp
 1535  kubectl get svc -n -myapp
 1536  kubectl get svc -n myapp
 1537  git add .
 1538  git commit -m 'grafana agent test'
 1539  git push origin main 
 1540  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1541  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1542  git add .
 1543  git commit -m 'grafana agent test'
 1544  git push origin main 
 1545  minikube start -p sips-cicd
 1546  kubectl get pods -A
 1547  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1548  git add .
 1549  git commit -m 'adjust mysql exporter'
 1550  git push origin main
 1551  git push
 1552  git push origin main
 1553  git add .
 1554  git commit -m 'adjust mysql exporter'
 1555  git push origin main
 1556  git push
 1557  git push origin main
 1558  git push origin main 
 1559  kubectl get services
 1560  kubectl get svc
 1561  kubectl get svc -n myapp
 1562  hl
 1563  get secret/mysql -oyaml
 1564  kubectl get secret/mysql -oyaml
 1565  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n myapp
 1566  kubectl get secret/mysql -oyaml
 1567  kubectl get secret/mysql-secret -oyaml
 1568  pwd
 1569  git add .
 1570  git commit -m 'test mysql exporter'
 1571  git push origin main 
 1572  git add .
 1573  git commit -m 'test mysql exporter'
 1574  git push origin main 
 1575  git add .
 1576  git commit -m 'test mysql exporter'
 1577  git push origin main 
 1578  kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.16.1/controller.yaml
 1579  kubectl get svc -n myapp
 1580  kubectl get svc -A
 1581  kubectl get svc -n myapp
 1582  kubectl get pods -A
 1583  git add .
 1584  git commit -m 'mysql values'
 1585  git push origin main
 1586  git add .
 1587  git commit -m 'mysql values'
 1588  git push origin main
 1589  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1590  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1591  git add .
 1592  git commit -m 'mysql'
 1593  git push origin main
 1594  minikube start -p sips-cicd
 1595  kubectl port-forward svc/argocd-server -n argocd 8084:443
 1596  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1597  kubectl get pods -A
 1598  ./setup-cluster.sh 
 1599  kubectl apply -f src/mysql/mysql-secrets.yaml
 1600  git add .
 1601  git commit -m 'mysql'
 1602  git push origin main
 1603  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1604  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1605  kubectl get pods -A
 1606  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1607  ./setup-cluster.sh 
 1608  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1609  kubectl get pods -A
 1610  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1611  minikube start -p sips-cicd
 1612  kubectl get pods -A
 1613  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1614  kubectl get pods -A
 1615  git add .
 1616  git commit -m 'secrets seal'
 1617  git push origin main
 1618  kubectl get pods -A
 1619  git add .
 1620  git commit -m 'secrets seal'
 1621  git push origin main
 1622  kubectl get pods -A
 1623  kubectl port-forward svc/argocd-server -n argocd 8088:443
 1624  ./setup-cluster.sh 
 1625  kubectl get pods -A
 1626  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1627  kubectl get pods -A
 1628  ./scripts/build-and-push-local.sh
 1629  kubectl get pods -A
 1630  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1631  ./setup-cluster.sh 
 1632  kubectl get pods -A
 1633  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1634  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1635  minikube start -p sips-cicd
 1636  kubectl get pods -A
 1637  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1638  kubectl get pods -A
 1639  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1640  minikube start -p sips-cicd
 1641  kubectl get pods -A
 1642  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1643  kubectl get pods -A
 1644  kubectl apply -f environments/overlays/base/Task.yaml
 1645  git add .
 1646  git commit -m 'task in one test'
 1647  git push origin main 
 1648  kubectl get pods -A
 1649  kubectl apply -f environments/overlays/base/Task.yaml
 1650  kubectl get pods -A
 1651  kubectl apply -f environments/overlays/base/Task.yaml
 1652  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1653  kubectl get pods -A
 1654  kubectl describe pod mysql-0 -n argocd
 1655  kubectl logs mysql-0 -n argocd
 1656  git add .
 1657  git commit -m 'task secrets updated'
 1658  git push origin main 
 1659  kubectl get pods -A
 1660  minikube start -p sips-cicd
 1661  kubectl get pods -A
 1662  ./setup-cluster.sh 
 1663  kubectl get pods -A
 1664  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1665  kubectl port-forward svc/argocd-server -n argocd 8082:443
 1666  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1667  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1668  kubectl get pods -A
 1669  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1670  kubectl port-forward svc/argocd-server -n argocd 8081:443
 1671  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1672  kubectl port-forward svc/argocd-server -n argocd 8084:443
 1673  git add .
 1674  git commit -m 'task  updated'
 1675  git push origin main 
 1676  kubectl get pods -A
 1677  kubectl apply -f environments/overlays/base/Task.yaml
 1678  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1679  ./scripts/build-and-push-local.sh
 1680  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1681  kubectl port-forward svc/argocd-server -n argocd 8085:443
 1682  minikube start -p sips-cicd
 1683  kubectl get pods -A
 1684  minikube start -p sips-cicd
 1685  kubectl get pods -A
 1686  ./setup-cluster.sh 
 1687  kubectl get pods -A
 1688  minikube start -p sips-cicd
 1689  kubectl get pods -A
 1690  /scripts/build-and-push-local.sh
 1691  kubectl get pods -A
 1692  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1693  ./scripts/build-and-push-local.sh
 1694  kubectl port-forward svc/argocd-server -n argocd 8085:443
 1695  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1696  ./setup-cluster.sh 
 1697  kubectl get pods -A
 1698  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1699  kubectl get pods -A
 1700  ./scripts/build-and-push-local.sh
 1701  kubectl get pods -A
 1702  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1703  ./setup-cluster.sh 
 1704  kubectl get pods -A
 1705  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1706  kubectl apply -f src/mysql/mysql-secrets.yaml
 1707  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1708  kubectl apply -f environments/overlays/base/Task.yaml
 1709  kubectl get pods -A
 1710  history
 1711  kubectl get pods -A
 1712  ./setup-cluster.sh 
 1713  kubectl get pods -A
 1714  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1715  ./scripts/build-and-push-local.sh
 1716  kubectl get pods -A
 1717  git add .
 1718  git commit 'kustomize test'
 1719  git commit -m 'kustomize test'
 1720  git push origin main
 1721  kubectl get pods -A
 1722  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1723  ./setup-cluster.sh 
 1724  kubectl get pods -A
 1725  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1726  kubectl apply -f environments/overlays/base/Task.yaml
 1727  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1728  ./scripts/build-and-push-local.sh
 1729  kubectl get pods -A
 1730  kubectl logs grafana-agent-gx4mw -n myapp
 1731  kubectl get pods -A
 1732  minikube start -p sips-cicd
 1733  kubectl get pods -A
 1734  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1735  kubectl get pods -A
 1736  git add .
 1737  git commit -m 'remove duplicate deployments'
 1738  git push origin main 
 1739  git add .
 1740  git commit -m 'remove duplicate deployments'
 1741  git push origin main 
 1742  kubectl get svc -n argocd
 1743  kubectl get pods -A
 1744  kubectl get svc -n observability
 1745  kubectl get svc -n argocd
 1746  kubectl get svc -n myapp
 1747  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1748  kubectl get pods -A
 1749  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1750  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1751  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1752  kubectl get pods -A
 1753  git add .
 1754  git commit -m 'static mode'
 1755  git push origin main 
 1756  kubectl get pods -A
 1757  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1758  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1759  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1760  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1761  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1762  kubectl get pods -A
 1763  minikube start -p sips-cicd
 1764  kubectl get pods -A
 1765  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1766  git add .
 1767  git commit -m 'grafana static mode test'
 1768  git add .
 1769  git commit -m 'grafana static mode test'
 1770  git push origin main 
 1771  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1772  kubectl apply -f environments/overlays/base/mysql-exporter-secret.yaml
 1773  kubectl appl -f environments/overlays/base/grafana-agent-operator.yaml
 1774  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1775  curl -o crds.yaml https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
 1776  kubectl apply -f crds.yaml
 1777  kubectl wait crd --all --for condition=Established --timeout=60s
 1778  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1779  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1780  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1781  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1782  kubectl apply -f environments/overlays/base/grafana-agent-instance.yaml
 1783  kubectl apply -f https://github.com/grafana/agent/tree/main/production/operator/crds
 1784  kubectl apply -f environments/overlays/base/grafana-agent-instance.yaml
 1785  helm repo add grafana https://grafana.github.io/helm-charts
 1786  helm repo update
 1787  helm install grafana-agent-operator grafana/grafana-agent-operator
 1788  helm install grafana-agent-operator grafana/grafana-agent-operator -f values.yaml
 1789  helm install my-release grafana/grafana-agent-operator -f values.yaml
 1790  helm install grafana-agent-operator grafana/grafana-agent-operator -f values.yaml -n myapp
 1791  kubectl get pod
 1792  kubectl get svc
 1793  kubectl apply -f production/operator/crds
 1794  helm repo add grafana https://grafana.github.io/helm-charts
 1795  helm repo update
 1796  helm install grafana-agent-operator grafana/grafana-agent-operator
 1797  helm install grafana-agent-operator2 grafana/grafana-agent-operator
 1798  helm install grafana-agent-operator2 grafana/grafana-agent-operator -f values.yaml
 1799  kubectl apply -f environments/overlays/base/grafana-agent-instance.yaml
 1800  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1801  kubectl get pods -A
 1802  kubectl get svc -n observability
 1803  kubectl apply -f environments/overlays/base/metricsInstance.yaml
 1804  kubectl apply -f environments/overlays/base/cadvisor-monitor-service.yaml
 1805  kubectl apply -f environments/overlays/base/logsInstance.yaml
 1806  kubectl apply -f environments/overlays/base/container-pod-logs.yaml
 1807  kubectl get crd podlogs.monitoring.grafana.com
 1808  kubectl get crd podlogs.monitoring.grafana.com -o jsonpath='{.spec.versions[*].name}'
 1809  kubectl apply -f environments/overlays/base/container-pod-logs.yaml
 1810  git add .
 1811  git commit -m 'grafana logs and metrics  configure'
 1812  git puh origin main 
 1813  git push origin main 
 1814  git add .
 1815  git commit -m 'update kustpmize'
 1816  git commit -m 'update kustomize'
 1817  git push origin main
 1818  kubectl apply -f environments/overlays/base/container-pod-logs.yaml
 1819  kubectl get crd
 1820  kubectl apply -f environments/overlays/base/container-pod-logs.yaml
 1821  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1822  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1823  ./setup-cluster.sh 
 1824  kubectl get pods -A
 1825  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1826  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1827  kubectl get pods -A
 1828  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1829  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1830  kubectl port-forward svc/argocd-server -n argocd 8085:443
 1831  kubectl port-forward svc/argocd-server -n argocd 8081:443
 1832  kubectl get pods -A
 1833  git add .
 1834  git commit -m 'update'
 1835  git push origin main
 1836  kubectl get pods -A
 1837  kubectl port-forward svc/argocd-server -n argocd 8083:443
 1838  ./setup-cluster.sh 
 1839  kubectl get pods -A
 1840  ./setup-cluster.sh 
 1841  kubectl get pods -A
 1842  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1843  kubectl get pods -A
 1844  kubectl port-forward svc/argocd-server -n argocd 8083:443
 1845  minikube start -p sips-cicd
 1846  kubectl get pods -A
 1847  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1848  kubectl get pods -A
 1849  kubectl port-forward svc/argocd-server -n argocd 8083:443
 1850  ./setup-cluster.sh 
 1851  kubectl get pods -A
 1852  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1853  kubectl port-forward svc/argocd-server -n argocd 8086:443
 1854  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1855  kubectl get pods -A
 1856  kubectl port-forward svc/argocd-server -n argocd 8070:443
 1857  ./setup-cluster.sh 
 1858  kubectl get pods -A
 1859  minikube start -p sips-cicd
 1860  kubectl get pods -A
 1861  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1862  kubectl get pods -A
 1863  kubectl port-forward svc/argocd-server -n argocd 8070:443
 1864  minikube start -p sips-cicd
 1865  kubectl get pods -A
 1866  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1867  kubectl port-forward svc/argocd-server -n argocd 8073:443
 1868  ./setup-cluster.sh 
 1869  minikube start -p sips-cicd
 1870  kubectl get pods -A
 1871  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1872  kubectl get pods -A
 1873  kubectl port-forward svc/argocd-server -n argocd 8079:443
 1874  minikube start -p sips-cicd
 1875  kubectl get pods -A
 1876  ./setup-cluster.sh 
 1877  kubectl get pods -A
 1878  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1879  kubectl apply -f /environments/overlays/base/mysql-operator-secret.yaml
 1880  kubectl apply -f environments/overlays/base/mysql-exporter-secret.yaml
 1881  git add .
 1882  git commit -m 'exporter secrets'
 1883  git add .
 1884  git commit -m 'exporter secrets'
 1885  git push origin main
 1886  git add .
 1887  git commit -m 'exporter secrets'
 1888  git push origin main
 1889  kubectl get pods -A
 1890  kubectl port-forward svc/argocd-server -n argocd 8076:443
 1891  kubectl port-forward svc/argocd-server -n argocd 8074:443
 1892  ./setup-cluster.sh 
 1893  kubectl get pods -A
 1894  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1895  git add .
 1896  git commit -m 'mysql'
 1897  git push origin main
 1898  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1899  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1900  kubectl get pods -A
 1901  git add .
 1902  git commit -m 'grafana agent'
 1903  git push origin main
 1904  kubectl apply -f environments/overlays/base/mysql-exporter-secret.yaml
 1905  git add .
 1906  git commit -m 'sql secrets'
 1907  git push origin main
 1908  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1909  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1910  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1911  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1912  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1913  git add .
 1914  git commit -m 'sql secrets'
 1915  git push origin main
 1916  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1917  kubectl port-forward svc/argocd-server -n argocd 8077:443
 1918  kubectl get pods -A
 1919  git add .
 1920  git commit -m 'sql exporter'
 1921  git push origin main
 1922  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1923  kubectl port-forward svc/argocd-server -n argocd 8067:443
 1924  kubectl get pods -A
 1925  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1926  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1927  git add .
 1928  git commit -m 'sql exporter'
 1929  git push origin main
 1930  kubectl get pods -A
 1931  git add .
 1932  git commit -m 'sql exporter'
 1933  kubectl port-forward svc/argocd-server -n argocd 8097:443
 1934  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1935  kubectl get pods -A
 1936  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1937  minikube start -p sips-cicd
 1938  kubectl get pods -A
 1939  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1940  history
 history                                                                                          bash  20:35:02 
 1002  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1003  kubectl get pods -A
 1004  ./scripts/build-and-push-local.sh
 1005  kubectl get pods -A
 1006  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1007  ./setup-cluster.sh 
 1008  kubectl get pods -A
 1009  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1010  kubectl apply -f src/mysql/mysql-secrets.yaml
 1011  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1012  kubectl apply -f environments/overlays/base/Task.yaml
 1013  kubectl get pods -A
 1014  history
 1015  kubectl get pods -A
 1016  ./setup-cluster.sh 
 1017  kubectl get pods -A
 1018  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1019  ./scripts/build-and-push-local.sh
 1020  kubectl get pods -A
 1021  git add .
 1022  git commit 'kustomize test'
 1023  git commit -m 'kustomize test'
 1024  git push origin main
 1025  kubectl get pods -A
 1026  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1027  ./setup-cluster.sh 
 1028  kubectl get pods -A
 1029  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1030  kubectl apply -f environments/overlays/base/Task.yaml
 1031  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1032  ./scripts/build-and-push-local.sh
 1033  kubectl get pods -A
 1034  kubectl logs grafana-agent-gx4mw -n myapp
 1035  kubectl get pods -A
 1036  minikube start -p sips-cicd
 1037  kubectl get pods -A
 1038  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1039  kubectl get pods -A
 1040  git add .
 1041  git commit -m 'remove duplicate deployments'
 1042  git push origin main 
 1043  git add .
 1044  git commit -m 'remove duplicate deployments'
 1045  git push origin main 
 1046  kubectl get svc -n argocd
 1047  kubectl get pods -A
 1048  kubectl get svc -n observability
 1049  kubectl get svc -n argocd
 1050  kubectl get svc -n myapp
 1051  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1052  kubectl get pods -A
 1053  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1054  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1055  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1056  kubectl get pods -A
 1057  git add .
 1058  git commit -m 'static mode'
 1059  git push origin main 
 1060  kubectl get pods -A
 1061  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1062  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1063  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1064  kubectl port-forward svc/argocd-server -n argocd 8087:443
 1065  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1066  kubectl get pods -A
 1067  minikube start -p sips-cicd
 1068  kubectl get pods -A
 1069  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1070  git add .
 1071  git commit -m 'grafana static mode test'
 1072  git add .
 1073  git commit -m 'grafana static mode test'
 1074  git push origin main 
 1075  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1076  kubectl apply -f environments/overlays/base/mysql-exporter-secret.yaml
 1077  kubectl appl -f environments/overlays/base/grafana-agent-operator.yaml
 1078  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1079  curl -o crds.yaml https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
 1080  kubectl apply -f crds.yaml
 1081  kubectl wait crd --all --for condition=Established --timeout=60s
 1082  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1083  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1084  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1085  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1086  kubectl apply -f environments/overlays/base/grafana-agent-instance.yaml
 1087  kubectl apply -f https://github.com/grafana/agent/tree/main/production/operator/crds
 1088  kubectl apply -f environments/overlays/base/grafana-agent-instance.yaml
 1089  helm repo add grafana https://grafana.github.io/helm-charts
 1090  helm repo update
 1091  helm install grafana-agent-operator grafana/grafana-agent-operator
 1092  helm install grafana-agent-operator grafana/grafana-agent-operator -f values.yaml
 1093  helm install my-release grafana/grafana-agent-operator -f values.yaml
 1094  helm install grafana-agent-operator grafana/grafana-agent-operator -f values.yaml -n myapp
 1095  kubectl get pod
 1096  kubectl get svc
 1097  kubectl apply -f production/operator/crds
 1098  helm repo add grafana https://grafana.github.io/helm-charts
 1099  helm repo update
 1100  helm install grafana-agent-operator grafana/grafana-agent-operator
 1101  helm install grafana-agent-operator2 grafana/grafana-agent-operator
 1102  helm install grafana-agent-operator2 grafana/grafana-agent-operator -f values.yaml
 1103  kubectl apply -f environments/overlays/base/grafana-agent-instance.yaml
 1104  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1105  kubectl get pods -A
 1106  kubectl get svc -n observability
 1107  kubectl apply -f environments/overlays/base/metricsInstance.yaml
 1108  kubectl apply -f environments/overlays/base/cadvisor-monitor-service.yaml
 1109  kubectl apply -f environments/overlays/base/logsInstance.yaml
 1110  kubectl apply -f environments/overlays/base/container-pod-logs.yaml
 1111  kubectl get crd podlogs.monitoring.grafana.com
 1112  kubectl get crd podlogs.monitoring.grafana.com -o jsonpath='{.spec.versions[*].name}'
 1113  kubectl apply -f environments/overlays/base/container-pod-logs.yaml
 1114  git add .
 1115  git commit -m 'grafana logs and metrics  configure'
 1116  git puh origin main 
 1117  git push origin main 
 1118  git add .
 1119  git commit -m 'update kustpmize'
 1120  git commit -m 'update kustomize'
 1121  git push origin main
 1122  kubectl apply -f environments/overlays/base/container-pod-logs.yaml
 1123  kubectl get crd
 1124  kubectl apply -f environments/overlays/base/container-pod-logs.yaml
 1125  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1126  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1127  ./setup-cluster.sh 
 1128  kubectl get pods -A
 1129  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1130  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1131  kubectl get pods -A
 1132  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1133  kubectl port-forward svc/argocd-server -n argocd 8089:443
 1134  kubectl port-forward svc/argocd-server -n argocd 8085:443
 1135  kubectl port-forward svc/argocd-server -n argocd 8081:443
 1136  kubectl get pods -A
 1137  git add .
 1138  git commit -m 'update'
 1139  git push origin main
 1140  kubectl get pods -A
 1141  kubectl port-forward svc/argocd-server -n argocd 8083:443
 1142  ./setup-cluster.sh 
 1143  kubectl get pods -A
 1144  ./setup-cluster.sh 
 1145  kubectl get pods -A
 1146  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1147  kubectl get pods -A
 1148  kubectl port-forward svc/argocd-server -n argocd 8083:443
 1149  minikube start -p sips-cicd
 1150  kubectl get pods -A
 1151  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1152  kubectl get pods -A
 1153  kubectl port-forward svc/argocd-server -n argocd 8083:443
 1154  ./setup-cluster.sh 
 1155  kubectl get pods -A
 1156  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1157  kubectl port-forward svc/argocd-server -n argocd 8086:443
 1158  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1159  kubectl get pods -A
 1160  kubectl port-forward svc/argocd-server -n argocd 8070:443
 1161  ./setup-cluster.sh 
 1162  kubectl get pods -A
 1163  minikube start -p sips-cicd
 1164  kubectl get pods -A
 1165  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1166  kubectl get pods -A
 1167  kubectl port-forward svc/argocd-server -n argocd 8070:443
 1168  minikube start -p sips-cicd
 1169  kubectl get pods -A
 1170  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1171  kubectl port-forward svc/argocd-server -n argocd 8073:443
 1172  ./setup-cluster.sh 
 1173  minikube start -p sips-cicd
 1174  kubectl get pods -A
 1175  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1176  kubectl get pods -A
 1177  kubectl port-forward svc/argocd-server -n argocd 8079:443
 1178  minikube start -p sips-cicd
 1179  kubectl get pods -A
 1180  ./setup-cluster.sh 
 1181  kubectl get pods -A
 1182  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1183  kubectl apply -f /environments/overlays/base/mysql-operator-secret.yaml
 1184  kubectl apply -f environments/overlays/base/mysql-exporter-secret.yaml
 1185  git add .
 1186  git commit -m 'exporter secrets'
 1187  git add .
 1188  git commit -m 'exporter secrets'
 1189  git push origin main
 1190  git add .
 1191  git commit -m 'exporter secrets'
 1192  git push origin main
 1193  kubectl get pods -A
 1194  kubectl port-forward svc/argocd-server -n argocd 8076:443
 1195  kubectl port-forward svc/argocd-server -n argocd 8074:443
 1196  ./setup-cluster.sh 
 1197  kubectl get pods -A
 1198  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1199  git add .
 1200  git commit -m 'mysql'
 1201  git push origin main
 1202  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1203  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1204  kubectl get pods -A
 1205  git add .
 1206  git commit -m 'grafana agent'
 1207  git push origin main
 1208  kubectl apply -f environments/overlays/base/mysql-exporter-secret.yaml
 1209  git add .
 1210  git commit -m 'sql secrets'
 1211  git push origin main
 1212  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1213  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1214  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1215  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1216  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1217  git add .
 1218  git commit -m 'sql secrets'
 1219  git push origin main
 1220  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1221  kubectl port-forward svc/argocd-server -n argocd 8077:443
 1222  kubectl get pods -A
 1223  git add .
 1224  git commit -m 'sql exporter'
 1225  git push origin main
 1226  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1227  kubectl port-forward svc/argocd-server -n argocd 8067:443
 1228  kubectl get pods -A
 1229  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1230  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1231  git add .
 1232  git commit -m 'sql exporter'
 1233  git push origin main
 1234  kubectl get pods -A
 1235  git add .
 1236  git commit -m 'sql exporter'
 1237  kubectl port-forward svc/argocd-server -n argocd 8097:443
 1238  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1239  kubectl get pods -A
 1240  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1241  minikube start -p sips-cicd
 1242  kubectl get pods -A
 1243  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1244  history
 1245  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1246  mysql -u root -p
 1247  kubectl exec -it mysql-0 -- /bin/bash
 1248  kubectl get pods -n argocd
 1249  kubectl get pods -n argocd2
 1250  kubectl exec -it mysql-0 -- /bin/bash
 1251  kubectl get secrets -n argocd2
 1252  kubectl get secret mysql-secrets -n argocd2 -o jsonpath='{.data.password}' | base64 -d
 1253  kubectl get secret mysql-secrets -n argocd2 -o jsonpath='{.data.mysql-root-password}' | base64 -d
 1254  kubectl exec -it mysql-0 -n argocd2 -- /bin/bash
 1255  kubectl logs mysql-0 -n argocd2
 1256  SHOW GRANTS FOR 'root'@'10.244.0.201';
 1257  kubectl exec -it mysql-0 -n argocd2 -- /bin/bash
 1258  mysql -u root -p
 1259  kubectl exec -it mysql-0 -n argocd2 -- /bin/bash
 1260  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1261  git status
 1262  git add .
 1263  git committ -m 'grafana config'
 1264  git commit -m 'grafana config'
 1265  git push origin main
 1266  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1267  kubectl apply -f environments/overlays/base/grafana-agent-config.yaml
 1268  kubectl get pods -A
 1269  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1270  kubectl get svc -n observability
 1271  kubectl port-forward service/prometheus-stack-Prometheus 9090
 1272  kubectl port-forward svc/prometheus-stack-Prometheus 9090
 1273  kubectl port-forward svc/prometheus-stack-Prometheus -n observability 9090
 1274  kubectl port-forward svc/kube-prometheus-stack-Prometheus -n observability 9090
 1275  kubectl get servicemonitor
 1276  kubectl get crd
 1277  kubectl get pods -A
 1278  kubectl get svc -argocd2
 1279  kubectl get svc -n argocd2
 1280  kubectl get pods -n argocd2
 1281  kubectl get servicemonitor mysql-exporter-cd477b74d-l5z5t -o yaml
 1282  kubectl get servicemonitor mysql-exporter -o yaml
 1283  kubectl get servicemonitor -n argocd2
 1284  kubectl get servicemonitor -n observability 
 1285  kubectl get servicemonitor -A
 1286  kubectl get pods -n argocd2
 1287  git add .
 1288  git commit -m 'exporter release name update'
 1289  git push origin main 
 1290  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1291  kubectl get crd
 1292  kubectl get pods -A
 1293  helm repo add add prometheus-community https://prometheus-community.github.io/helm-charts
 1294  kubectl helm repo add add prometheus-community https://prometheus-community.github.io/helm-charts
 1295  $ helm repo add add prometheus-community https://prometheus-community.github.io/helm-charts
 1296  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
 1297  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1298  helm search prometheus-mysql-exporter --repo https://prometheus-community.github.io/helm-charts
 1299  curl -s https://prometheus-community.github.io/helm-charts/index.yaml
 1300  helm repo search prometheus-mysql-exporter prometheus-community
 1301  helm search prometheus-mysql-exporter --repo prometheus-community
 1302  helm repo search prometheus-mysql-exporter prometheus-community
 1303  helm install my-prometheus-mysql-exporter prometheus-community/prometheus-mysql-exporter
 1304  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1305  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9090
 1306  kubectl get pods -A
 1307  minikubr start -p sips-cicd
 1308  minikube start -p sips-cicd
 1309  kubectl get pods -A
 1310  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1311  helm search prometheus-mysql-exporter --repo https://prometheus-community.github.io/helm-charts
 1312  curl -s https://prometheus-community.github.io/helm-charts/index.yaml
 1313  kubectl logs -n argocd -l k8s-app=argocd
 1314  kubectl logs -n argocd2 -l k8s-app=argocd
 1315  kubectl logs -n myapp -l k8s-app=argocd
 1316  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1317  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1318  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1319  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1320  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1321  kubectl port-forward svc/argocd-server -n argocd 8079:443
 1322  kubectl port-forward svc/argocd-server -n argocd 8042:443
 1323  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1324  kubectl get pods -A
 1325  minikube start -p sips-cicd
 1326  kubectl get pods -A
 1327  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1328  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1329  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1330  helm repo add bitnami https://charts.bitnami.com/bitnami
 1331  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1332  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1333  helm search repo bitnami/mysql --versions
 1334  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1335  kubectl get pods -A
 1336  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1337  git add .
 1338  git commit -m 'change local chart repo'
 1339  git push origin main 
 1340  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1341  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1342  kubectl port-forward svc/argocd-server -n argocd 8012:443
 1343  kubectl port-forward svc/argocd-server -n argocd 8022:443
 1344  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1345  kubectl port-forward svc/argocd-server -n argocd 8072:443
 1346  kubectl port-forward svc/argocd-server -n argocd 8002:443
 1347  kubectl get pods -A
 1348  minikube start -p sips-cicd
 1349  kubectl get pods -A
 1350  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1351  kubectl get pods -A
 1352  minikube start -p sips-cicd
 1353  kubectl get pods -A
 1354  ./setup-cluster.sh 
 1355  kubectl get pods -A
 1356  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1357  kubectl get pods -A
 1358  git add .
 1359  git commit -m 'kustomize edit'
 1360  git push origin main 
 1361  git add .
 1362  git commit -m 'kustomize edit'
 1363  git push origin main 
 1364  kubectl get pods -A
 1365  kubectl port-forward svc/argocd-server -n argocd 8032:443
 1366  ./setup-cluster.sh 
 1367  kubectl get pods -A
 1368  minikube start -p sips-cicd
 1369  kubectl get pods -A
 1370  ./setup-cluster.sh 
 1371  kubectl get pods -A
 1372  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1373  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1374  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1375  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1376  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1377  kubectl get svc -n observability 
 1378  git ad .
 1379  git add .
 1380  git commit -m 'grafana operator adjusted'
 1381  git push origin main 
 1382  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1383  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1384  kubectl port-forward svc/argocd-server -n argocd 8032:443
 1385  kubectl get pods -A
 1386  minikube start -p sips-cicd
 1387  kubectl get pods -A
 1388  kubectl port-forward svc/argocd-server -n argocd 8012:443
 1389  kubectl get pods -A
 1390  minikube start -p sips-cicd
 1391  kubectl get pods -A
 1392  minikube start -p sips-cicd
 1393  kubectl get pods -A
 1394  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1395  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1396  ./setup-cluster.sh 
 1397  kubectl get pods -A
 1398  watch kubectl get pods -A
 1399  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1400  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1401  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1402  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1403  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1404  kubectl get crd grafanaagents.monitoring.grafana.com
 1405  kubectl get crd grafanaagents.monitoring.grafana.com -n argocd2
 1406  kubectl get crd grafanaagents.monitoring.grafana.com -n observability
 1407  kubectl get crd grafanaagents.monitoring.grafana.com -n myapp
 1408  kubectl get crd grafanaagents.monitoring.grafana.com -n default
 1409  kubectl get crd grafanaagents.monitoring.grafana.com -o jsonpath='{.spec.versions[*].name}'
 1410  kubectl port-forward svc/argocd-server -n argocd 8015:443
 1411  kubectl apply -f environments/overlays/base/agent-crd.yaml
 1412  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1413  kubectl get crd grafanaagents.monitoring.grafana.com -o jsonpath='{.spec.versions[*].name}'
 1414  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1415  kubectl port-forward svc/argocd-server -n argocd 8012:443
 1416  kubectl port-forward svc/argocd-server -n argocd 8010:443
 1417  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1418  kubectl get pods -A
 1419  minikube start -p sips-cicd
 1420  kubectl get pods -A
 1421  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1422  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1423  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1424  kubectl describe crd grafanaagents.monitoring.grafana.com
 1425  kubectl get crd grafanaagents.monitoring.grafana.com -o yaml > grafana-agent-crd.yaml
 1426  cat grafana-agent-crd.yaml
 1427  kubectl get pods -A
 1428  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1429  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1430  kubectl get svc -l app=grafana-agent -n argocd2
 1431  kubectl get svc -l app=grafana-agent -n argocd
 1432  kubectl get svc -l app=grafana-agent -n observability
 1433  kubectl port-forward svc/grafana-agent 12345:12345 -n argocd
 1434  kubectl port-forward svc/grafana-agent 12345:12345 -n argocd2
 1435  ./setup-cluster.sh 
 1436  kubectl get pods -A
 1437  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1438  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1439  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1440  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1441  kubectl apply -f environments/overlays/base/metricsInstance.yaml
 1442  kubectl apply -f environments/overlays/base/agent-crd.yaml
 1443  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1444  kubectl get pods -A
 1445  minikube start -p sips-cicd
 1446  ./setup-cluster.sh 
 1447  kubectl get pods -A
 1448  git add .
 1449  git commit -m 'grafana operator test'
 1450  git push origin main
 1451  git add .
 1452  git commit -m 'grafana operator test'
 1453  git add .
 1454  git commit -m 'grafana operator test'
 1455  git push origin main
 1456  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1457  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1458  kubectl port-forward svc/argocd-server -n argocd 8010:443
 1459  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1460  kubectl apply -f environments/overlays/base/agent-crd.yaml
 1461  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1462  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1463  kubectl apply -f environments/overlays/base/metricsInstance.yaml
 1464  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1465  kubectl port-forward svc/argocd-server -n argocd 8017:443
 1466  kubectl apply -f environments/overlays/base/metricsInstance.yaml
 1467  kubectl get pods -A
 1468  minikube start -p sips-cicd
 1469  kubectl get pods -A
 1470  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1471  kubectl port-forward svc/argocd-server -n argocd 8017:443
 1472  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1473  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1474  kubectl apply -f environments/overlays/base/agent-crd.yaml
 1475  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1476  kubectl get crd grafanaagents.monitoring.grafana.com -o yaml > grafana-agent-crd.yaml
 1477  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1478  git add .
 1479  git commit -m 'elastic search'
 1480  git push origin main
 1481  git push 
 1482  git push origin main
 1483  kubectl apply -f environments/overlays/base/ecs-deployment.yaml
 1484  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1485  kubectl port-forward svc/argocd-server -n argocd 8017:443
 1486  kubectl port-forward svc/argocd-server -n argocd 8014:443
 1487  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1488  kubectl get pods -A
 1489  minikube start -p sips-cicd
 1490  kubectl get pods -A
 1491  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1492  kubectl get pods -A
 1493  ./setup-cluster.sh 
 1494  minikube start -p sips-cicd
 1495  kubectl get pods -A
 1496  ./setup-cluster.sh 
 1497  watch kubectl get pods -A
 1498  kubectl get pods -A
 1499  watch kubectl get pods -A
 1500  kubectl get pods -A
 1501  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1502  kubectl get pods -A
 1503  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1504  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1505  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1506  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1507  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1508  kubectl get pods -A
 1509  kubectl get pods -n myapp
 1510  kubectl get pods -n argocd2
 1511  kubectl get pods -n argocd
 1512  kubectl get pods -n observability
 1513  minikube ip
 1514  sips-cicd ip
 1515  sips-cicd -p sips-cicd ip
 1516  kubectl get pods -A
 1517  kubectl describe pod kube-prometheus-stack-prometheus-node-exporter-gnjpn -n observability
 1518  kubectl get pods -A
 1519  kubectl get svc kube-prometheus-stack-k8s-resources-workload -n observability
 1520  kubectl get svc -n observability
 1521  kubectl get svc kube-prometheus-stack-prometheus -n observability
 1522  kubectl patch svc kube-prometheus-stack-prometheus -n observability -p '{"spec": {"type": "NodePort"}}'
 1523  kubectl get svc -n observability
 1524  kubectl get svc kube-prometheus-stack-prometheus -n observability
 1525  kubectl patch svc kube-prometheus-stack-prometheus -n observability -p '{"spec": {"type": "NodePort"}}'
 1526  kubectl get svc kube-prometheus-stack-prometheus -n observability
 1527  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1528  kubectl port-forward svc/argocd-server -n argocd 8010:443
 1529  argocd app get grafana-agent-operator
 1530  git add .
 1531  git commit -m 'operator'
 1532  git push origin main
 1533  git add .
 1534  git commit -m 'operator'
 1535  git push origin main
 1536  git add .
 1537  git commit -m 'scrape config adjust'
 1538  git push origin main
 1539  kubectl get pods -A
 1540  kubectl get svc -n observability
 1541  kubectl port-forward svc prometheus-kube-prometheus-stack-prometheus-0 -n observability 9090:9090
 1542  kubectl port-forward svc/prometheus-kube-prometheus-stack-prometheus-0 -n observability 9090:9090
 1543  git add .
 1544  git commit -m 'add correct data source for mysql scraping'
 1545  git push origin main
 1546  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1547  kubectl get pods -l app.kubernetes.io/name=mysql-exporter -n argocd2
 1548  kubectl logs -l app.kubernetes.io/name=grafana-agent -n argocd2
 1549  kubectl logs -l app.kubernetes.io/name=grafana-agent -n observability
 1550  kubectl port-forward service/grafana-agent 3000:3000 -n observability
 1551  kubectl port-forward service/grafana-agent 3000:3000 -n argocd2
 1552  git add .
 1553  git commit -m 'ammended grafana agent operator'
 1554  git push origin main
 1555  kubectl apply -f environments/overlays/base/grafana-agent-operator.yaml
 1556  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9090:9090
 1557  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1558  minikube start -p sips-cicd
 1559  kubectl get pods -A
 1560  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1561  kubectl port-forward svc/argocd-server -n argocd 8010:443
 1562  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1563  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1564  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1565  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1566  kubectl apply -f environments/overlays/base/agent-crd.yaml --server-side=true
 1567  kubectl wait crd grafanaagents.monitoring.grafana.com --for=condition=Established --timeout=60s
 1568  kubectl apply -f environments/overlays/base/grafana-agent.yaml
 1569  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1570  kubectl port-forward svc/argocd-server -n argocd 8010:443
 1571  kubectl apply -f environments/overlays/base/grafana-agent-deploying.yaml
 1572  kubectl port-forward svc/argocd-server -n argocd 8015:443
 1573  kubectl port-forward svc/argocd-server -n argocd 8010:443
 1574  kubectl get pods -A
 1575  ./scripts/build-and-push-local.sh
 1576  git add .
 1577  pwd
 1578  git add .
 1579  git cmmit -m 'node-web-app'
 1580  git commit -m 'node-web-app'
 1581  git push origin main
 1582  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1583  kubectl apply -f environments/overlays/base/grafana-agent-deploying.yaml
 1584  kubectl port-forward svc/argocd-server -n argocd 8009:443
 1585  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1586  kubectl port-forward svc/argocd-server -n argocd 8005:443
 1587  kubectl getp pods -A
 1588  kubectl get pods -A
 1589  minikube start -p sips-cicd
 1590  kubectl get pods -A
 1591  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1592  kubectl -apply -f environments/overlays/base/grafana-agent-deploying.yaml
 1593  kubectl apply -f environments/overlays/base/grafana-agent-deploying.yaml
 1594  kubectl port-forward svc/argocd-server -n argocd 8005:443
 1595  helm repo add elastic https://helm.elastic.co
 1596  helm install elasticsearch elastic/elasticsearch
 1597  kubectl get pods -A
 1598  helm uninstall elasticsearch
 1599  kubectl get pods -A
 1600  git add .
 1601  git commit -m 'deploy elastic search'
 1602  git push origin main 
 1603  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1604  kubectl apply -f environments/overlays/base/elasticsearch-deployment.yaml
 1605  kubectl port-forward svc/argocd-server -n argocd 8005:443
 1606  kubectl get pods -A
 1607  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1608  kubectl port-forward svc/argocd-server -n argocd 8005:443
 1609  kubectl apply -f environments/overlays/base/elk-stack-deployment.yaml
 1610  kubectl get pods -A
 1611  kubectl apply -f environments/overlays/base/elk-stack-deployment.yaml
 1612  helm repo add elastic https://helm.elastic.co
 1613  kubectl apply -f environments/overlays/base/elk-stack-deployment.yaml
 1614  kubectl get pods -A
 1615  kubectl apply -f environments/overlays/base/elk-stack-deployment.yaml
 1616  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1617  kubectl port-forward svc/argocd-server -n argocd 8005:443
 1618  minikube start -p sips-cicd
 1619  kubectl get pods -A
 1620  git add .
 1621  git commit -m 'elk-stack'
 1622  git push origin main 
 1623  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1624  kubectl port-forward svc/argocd-server -n argocd 8055:443
 1625  minikube start -p sips-cicd
 1626  kubectl get pods -A
 1627  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1628  kubectl apply -f environments/overlays/base/elk-stack-deployment.yaml
 1629  kubectl port-forward svc/argocd-server -n argocd 8022:443
 1630  kubectl apply -f environments/overlays/base/elasticsearch-deployment.yaml
 1631  kubectl apply -f environments/overlays/base/kibana-deployment.yaml
 1632  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1633  kubectl port-forward svc/argocd-server -n argocd 8022:443
 1634  kubectl port-forward svc/argocd-server -n argocd 8002:443
 1635  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1636  minikube start -p sips-cicd
 1637  kubectl get pods -A
 1638  ./scripts/build-and-push-local.sh
 1639  docker run  node-web-app:0.0.1 
 1640  docker run  localhost:5000/loadgenerator:latest
 1641  kubectl apply -f environments/overlays/base/grafana-agent-config.yaml
 1642  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1643  kubectl port-forward svc/grafana-agent -n myapp 80:80
 1644  kubectl get pods -A
 1645  git add .
 1646  pwd
 1647  git add .
 1648  git commit -m 'node web app'
 1649  git push origin main
 1650  docker run  node-web-app:0.0.1 
 1651  ./scripts/build-and-push-local.sh
 1652  git add .
 1653  git commit -m 'node web app'
 1654  git push origin main
 1655  kubectl apply -f environments/overlays/base/grafana-agent-deploying.yaml
 1656  kubectl apply -f environments/overlays/base/grafana-agent-metrics.yaml
 1657  docker run  node-web-app:0.0.1 
 1658  kubectl port-forward svc/argocd-server -n argocd 8006:443
 1659  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1660  kubectl apply -f environments/overlays/base/grafana-agent-deploying.yaml
 1661  kubectl port-forward svc/argocd-server -n argocd 8002:443
 1662  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1663  kubectl port-forward svc/argocd-server -n argocd 8006:443
 1664  kubectl get pods -A
 1665  minikube start -p sips-cicd
 1666  kubectl get pods -A
 1667  ./setup-cluster.sh 
 1668  kubectl get pods -A
 1669  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1670  git add .
 1671  git commit -m 'kustomize'
 1672  git oush origin main
 1673  git push origin main
 1674  kubectl get pods -A
 1675  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1676  git add .
 1677  git commit -m 'kustomize'
 1678  git push origin main
 1679  git add .
 1680  git commit -m 'kustomize'
 1681  git push origin main
 1682  kubectl port-forward svc/argocd-server -n argocd 8006:443
 1683  minikube start -p sips-cicd
 1684  kubectl get pods -A
 1685  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1686  git add .
 1687  git commit -m 'kustomize'
 1688  git push origin main
 1689  kubectl get pods -A
 1690  kubectl port-forward svc/argocd-server -n argocd 8006:443
 1691  ./setup-cluster.sh 
 1692  kubectl get pods -A
 1693  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1694  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1695  kubectl apply -f environments/overlays/base/grafana-agent-deploying.yaml
 1696  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1697  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1698  kubectl port-forward svc/argocd-server -n argocd 8006:443
 1699  minikube start -p sips-cicd
 1700  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1701  kubectl get pods -A
 1702  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1703  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1704  kubectl port-forward svc/argocd-server -n argocd 8006:443
 1705  ./setup-cluster.sh 
 1706  kubectl get pods -A
 1707  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1708  ./setup-cluster.sh 
 1709  minikube start -p sips-cicd
 1710  kubectl get pods -A
 1711  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1712  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1713  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1714  git add .
 1715  git commit -m 'kustomize'
 1716  git push origin main
 1717  kubectl apply -f overlays/base/grafana-agent-deploying.yaml
 1718  kubectl apply -f environments/overlays/base/grafana-agent-deploying.yaml
 1719  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1720  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd
 1721  kubectl get pods -A
 1722  kubectl describe pod mysql-0 -n argocd2
 1723  git add.
 1724  git add .
 1725  git commit -m 'kustomize'
 1726  git push origin main
 1727  git add .
 1728  git commit -m 'secret namespace fix'
 1729  git push origin main
 1730  git add .
 1731  git commit -m 'secret namespace fix'
 1732  git push origin main
 1733  kubectl get svc -n observability
 1734  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1735  kubectl port-forward svc/argocd-server -n argocd 8006:443
 1736  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1737  kubectl get pods -A
 1738  minikube start -p sips-cicd
 1739  kubectl get pods -A
 1740  docker run  node-web-app:0.0.1 
 1741  kubectl create secret generic mysql-secret --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd
 1742  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1743  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1744  kubectl get pods -A
 1745  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1746  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1747  netstat -an | grep 4318
 1748  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1749  kubectl port-forward service/kube-prometheus-stack-Prometheus 9090
 1750  kubectl port-forward svc/kube-prometheus-stack-Prometheus -n observability 9080:9090
 1751  kubectl get svc -n observability
 1752  kubectl get svc -argocd2
 1753  kubectl get svc -n argocd2
 1754  git add .
 1755  git commit -m 'test'
 1756  git oush origin main 
 1757  git push origin main 
 1758  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1759  git add .
 1760  git commit -m 'test'
 1761  git push origin main 
 1762  kubectl get svc -n observability
 1763  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 88:80
 1764  kubectl port-forward svc/argocd-server -n argocd 8006:443
 1765  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1766  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9080:9090
 1767  kubectl get pods -A
 1768  docker run  localhost:5000/loadgenerator:latest
 1769  cd src/demo-node-web-app-main/src/loadgenerator
 1770  docker run  localhost:5000/loadgenerator:latest
 1771  docker build ./src/demo-node-web-app-main/src--tag loadgenerator:latest
 1772  cd
 1773  pwd
 1774  cd ..
 1775  pwd
 1776  cd -
 1777  pwd
 1778  cd ~
 1779  pwd
 1780  cd sips-cicd
 1781  ls
 1782  pwd
 1783  docker build ./src/demo-node-web-app-main/src--tag loadgenerator:latest
 1784  pwd
 1785  docker tag loadgenerator:latest localhost:5000/loadgenerator:latest
 1786  docker push localhost:5000/loadgenerator:latest
 1787  kubectl apply -f environments/overlays/base/loadgenerator.yaml
 1788  kubectl apply -f environments/overlays/base/loadgenerator-values.yaml
 1789  kubectl get pods -A
 1790  docker ps -aq
 1791  docker ps -a
 1792  docker ps
 1793  docker ps -n argocd2
 1794  kubectl stop pod mysql-0 -n argocd2
 1795  ubectl delete pod mysql-0 -n argocd2
 1796  kubectl delete pod mysql-0 -n argocd2
 1797  mkdir /opt/bitnami/mysql/data
 1798  kubectl start pod mysql-0 -n argocd2
 1799  kubectl run mysql-0 -n argocd2
 1800  kubectl run mysql-0 -n argocd2 -i bitnami/mysql:8.0.34
 1801  kubectl run mysql-0 -n argocd2 -image bitnami/mysql:8.0.34
 1802  kubectl run mysql-0 -n argocd2 --image bitnami/mysql:8.0.34
 1803  kubectl get pods -A
 1804  kubectl describe mysql-0 -n argocd2
 1805  kubectl describe mysql-0
 1806  kubectl logs  mysql-0
 1807  kubectl describe svc mysql-0 -n argocd2
 1808  kubectl port-forward svc/grafana-agent -n argocd2 88:80
 1809  kubectl port-forward svc/grafana-agent -n argocd2 88:80
 1810  git add .
 1811  git commit -m 'clean up'
 1812  git push origin main 
 1813  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1814  git add .
 1815  git commit -m 'clean up'
 1816  git push origin main 
 1817  kubectl get pods -A
 1818  minikube start -p sips-cicd
 1819  kubectl get pods -A
 1820  ./setup-cluster.sh 
 1821  kubectl get pods -A
 1822  minikube start -p sips-cicd
 1823  kubectl get pods -A
 1824  ./setup-cluster.sh 
 1825  kubectl get pods -A
 1826  minikube start -p sips-cicd
 1827  ./setup-cluster.sh 
 1828  minikube start -p sips-cicd
 1829  ./setup-cluster.sh 
 1830  kubectl get pods -A
 1831  ./setup-cluster.sh 
 1832  kubectl get pods -A
 1833  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1834  kubectl get pods -A
 1835  kubectl get pods -n agrocd2
 1836  kubectl get pods -A
 1837  kubectl describe secret mysql-secrets -n argocd2
 1838  kubectl get cm -n argocd2
 1839  git add .
 1840  git commit -m 'kustomize'
 1841  git push origin main
 1842  kubectl get pods -A
 1843  minikube start -p sips-cicd
 1844  kubectl get pods -A
 1845  ./setup-cluster.sh 
 1846  kubectl get pods -A
 1847  watch kubectl get pods -A
 1848  kubectl get pods -A
 1849  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1850  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1851  kubectl get pods -A
 1852  ./scripts/build-and-push-local.sh
 1853  kubectl apply -f environments/overlays/base/grafana-agent-metrics.yaml
 1854  git add .
 1855  git commit -m 'kustomization'
 1856  git push origin main
 1857  git add .
 1858  git commit -m 'kustomization'
 1859  git push origin main
 1860  kubectl apply -f environments/overlays/base/mysqld-exporter.yaml
 1861  docker run  localhost:5000/loadgenerator:latest
 1862  watch kubectl get pods -A
 1863  kubectl get pods -A
 1864  docker run  node-web-app:0.0.1 
 1865  kubectl get pods -A
 1866  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1867  kubectl get pods -A
 1868  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9080:9090
 1869  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1870  kubectl get pods -A
 1871  ./setup-cluster.sh 
 1872  kubectl get pods -A
 1873  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1874  kubectl apply -f environments/overlays/base/grafana-agent-metrics.yaml
 1875  kubectl get pods -A
 1876  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1877  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1878  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1879  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9080:9090
 1880  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1881  kubectl get pods -A
 1882  kubectl describe pod loki-stack-0 -n observability
 1883  kubectl get pods -A
 1884  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1885  kubectl get events
 1886  kubectl get pods -A
 1887  minikube start -p sips-cicd
 1888  kubectl get pods -A
 1889  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1890  kubectl get pods -A
 1891  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1892  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1893  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1894  kubectl create secret generic mysql-secrets --from-literal=MYSQL-ROOT-PASSWORD=password --from-literal=mysql-root-password=password -n argocd2
 1895  kubectl apply -f environments/overlays/base/grafana-agent-config.yaml
 1896  kubectl get pods -A
 1897  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1898  kubectl port-forward svc/argocd-server -n argocd 8012:443
 1899  kubectl port-forward svc/argocd-server -n argocd 8041:443
 1900  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9080:9090
 1901  kubectl get svc -n observability
 1902  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1903  kubectl get pods -A
 1904  git add .
 1905  git commit -m 'prometheus test'
 1906  git push origin main 
 1907  kubectl get pods -A
 1908  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1909  git add .
 1910  git commit -m 'kustomization file fixed'
 1911  git push origin main 
 1912  kubectl get svc -n observability
 1913  git add .
 1914  git commit -m 'kustomization file fixed'
 1915  git push origin main 
 1916  git add .
 1917  git commit -m 'kustomization file fixed'
 1918  git push origin main 
 1919  kubectl get svc -n observability
 1920  kubectl get pods -A
 1921  minikube start -p sips-cicd
 1922  kubectl port-forward svc/argocd-server -n argocd 8040:443
 1923  kubectl get pods -A
 1924  minikube start -p sips-cicd
 1925  kubectl get pods -A
 1926  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1927  kubectl port-forward svc/argocd-server -n argocd 8080:443
 1928  kubectl port-forward svc/argocd-server -n argocd 8033:443
 1929  kubectl get pods -A
 1930  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1931  kubectl get pods -A
 1932  kubectl port-forward svc/argocd-server -n argocd 8011:443
 1933  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1934  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1935  kubectl get pods -A
 1936  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9080:9090
 1937  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1938  kubectl get pods -A
 1939  kubectl get svc -n observability
 1940  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1941  kubectl get pods -A
 1942  kubectl port-forward svc/kube-prometheus-stack-grafana -n observability 80:80
 1943  kubectl get pods -A
 1944  kubectl create secret generic mysql-secrets --from-literal=mysql-root-password=<put-the-password-here> --from-literal=mysql-password=<put-the user-here> -n argocd2
 1945  kubectl apply -f environments/overlays/base/mysql-build-old.yaml
 1946  git add .
 1947  git commit -m 'secret user name error fixed'
 1948  git push origin main
 1949  kubectl apply -f environments/overlays/base/mysql-secrets.yaml
 1950  kubectl apply -f environments/overlays/base/grafana-agent-metrics.yaml
 1951  git add .
 1952  git commit -m 'metrics test'
 1953  git push origin main 
 1954  kubectl get secret mysql-secrets -n argocd2
 1955  kubectl delete  secret mysql-secrets -n argocd2
 1956  kubectl create secret generic mysql-secrets --from-literal=mysql-root-password=password --from-literal=mysql-password=password -n argocd2
 1957  git add .
 1958  git commit -m 'update secrets'
 1959  git push origin main 
 1960  kubectl apply -f environments/overlays/base/grafana-agent-metrics.yaml
 1961  kubectl port-forward svc/argocd-server -n argocd 8063:443
 1962  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9080:9090
 1963  kubectl port-forward svc/argocd-server -n argocd 8023:443
 1964  kubectl get pods -A
 1965  minikube start -p sips-cicd
 1966  kubectl get pods -A
 1967  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1968  kubectl port-forward svc/argocd-server -n argocd 8010:443
 1969  kubectl get pods -A
 1970  minikube start -p sips-cicd
 1971  kubectl get pods -A
 1972  kubectl describe pod grafana-agent-0  -n argocd2
 1973  kubectl get pods -A
 1974  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1975  kubectl mysqlcheck -u root -p --auto-repair --check --all-databases
 1976  kubectl get pods -A
 1977  kubectl port-forward svc/argocd-server -n argocd 8010:443
 1978  kubectl port-forward svc/kube-prometheus-stack-prometheus -n observability 9080:9090
 1979  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1980  ./setup-cluster.sh 
 1981  kubectl get pods -A
 1982  kubectl create secret generic mysql-secrets --from-literal=mysql-root-password=password --from-literal=mysql-password=password -n argocd2
 1983  kubectl apply -f environments/overlays/base/grafana-agent-metrics.yaml
 1984  kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
 1985  kubectl get pods -A
 1986  kubectl port-forward svc/argocd-server -n argocd 8066:443
 1987  minikube start -p sips-cicd
 1988  kubectl get pods -A
 1989  ./setup-cluster.sh 
 1990  kubectl get pods -A
 1991  kubectl create secret generic mysql-secrets --from-literal=mysql-root-password=password --from-literal=mysql-password=password -n argocd2
 1992  kubectl apply -f environments/overlays/base/grafana-agent-metrics.yaml
 1993  kubectl get pods -A
 1994  git add .
 1995  git commit -m 'sips annotation'
 1996  git push origin main
 1997  kubectl get pods -A
 1998  kubectl apply --server-side -f environments/overlays/base/agent-crd.yaml --serverSideApply: true
 1999  kubectl apply -f environments/overlays/base/agent-crd.yaml --serverSideApply: true
 2000  kubectl apply -f environments/overlays/base/agent-crd.yaml
 2001  history